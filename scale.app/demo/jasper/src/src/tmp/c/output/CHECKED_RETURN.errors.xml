<error>
<checker>CHECKED_RETURN</checker>
<template>checked_return_multievent_v1</template>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_stream.c</file>
<function>jas_stream_close</function>
<score>100</score>
<ordered>true</ordered>
<event>
<main>true</main>
<tag>check_return</tag>
<description>{CovLStr{v1}{Calling function {0} without checking return value (as is done elsewhere {1} out of {2} times).}{&quot;jas_stream_flush(jas_stream_t *)&quot;}{3}{5}}</description>
<line>463</line>
</event>
<event>
<event_set>1</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_stream_flush(stream)&quot;}{&quot;jas_stream_flush(stream)&quot;}}</description>
<line>656</line>
</event>
<event>
<event_set>2</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_stream_flush(enc-&gt;out)&quot;}{&quot;jas_stream_flush(enc-&gt;out)&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/jpc/jpc_enc.c</file>
<line>321</line>
</event>
<event>
<event_set>3</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_stream_flush(out)&quot;}{&quot;jas_stream_flush(out)&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/pnm/pnm_enc.c</file>
<line>228</line>
</event>
<event>
<tag>unchecked_value</tag>
<description>{CovLStr{v1}{No check of the return value of {0}.}{&quot;jas_stream_flush(stream)&quot;}}</description>
<line>463</line>
</event>
<extra>jas_stream_flush</extra>
<subcategory>none</subcategory>
</error>
<error>
<checker>CHECKED_RETURN</checker>
<template>checked_return_multievent_v1</template>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/jpc/jpc_t1enc.c</file>
<function>getthebyte</function>
<score>100</score>
<ordered>true</ordered>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;oldpos &gt;= 0L&quot;}}</description>
<line>185</line>
<path_event></path_event>
</event>
<event>
<main>true</main>
<tag>check_return</tag>
<description>{CovLStr{v1}{Calling function {0} without checking return value (as is done elsewhere {1} out of {2} times).}{&quot;jas_stream_seek(jas_stream_t *, long, int)&quot;}{17}{22}}</description>
<line>186</line>
</event>
<event>
<event_set>1</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_stream_seek(cmpt-&gt;stream_, 0L, 0)&quot;}{&quot;jas_stream_seek(cmpt-&gt;stream_, 0L, 0) &lt; 0L&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_image.c</file>
<line>330</line>
</event>
<event>
<event_set>2</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_stream_seek(cmpt-&gt;stream_, size - 1L, 0)&quot;}{&quot;jas_stream_seek(cmpt-&gt;stream_, size - 1L, 0) &lt; 0L&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_image.c</file>
<line>330</line>
</event>
<event>
<event_set>3</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_stream_seek(cmpt-&gt;stream_, (cmpt-&gt;width_ * (y + i) + x) * cmpt-&gt;cps_, 0)&quot;}{&quot;jas_stream_seek(cmpt-&gt;stream_, (cmpt-&gt;width_ * (y + i) + x) * cmpt-&gt;cps_, 0) &lt; 0L&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_image.c</file>
<line>490</line>
</event>
<event>
<event_set>4</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_stream_seek(cmpt-&gt;stream_, (cmpt-&gt;width_ * (y + i) + x) * cmpt-&gt;cps_, 0)&quot;}{&quot;jas_stream_seek(cmpt-&gt;stream_, (cmpt-&gt;width_ * (y + i) + x) * cmpt-&gt;cps_, 0) &lt; 0L&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_image.c</file>
<line>439</line>
</event>
<event>
<event_set>5</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_stream_seek(cmpt-&gt;stream_, 0L, 0)&quot;}{&quot;jas_stream_seek(cmpt-&gt;stream_, 0L, 0)&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_image.c</file>
<line>270</line>
</event>
<event>
<tag>unchecked_value</tag>
<description>{CovLStr{v1}{No check of the return value of {0}.}{&quot;jas_stream_seek(in, off, 0)&quot;}}</description>
<line>186</line>
</event>
<extra>jas_stream_seek</extra>
<subcategory>none</subcategory>
</error>
<error>
<checker>CHECKED_RETURN</checker>
<template>checked_return_multievent_v1</template>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/jpc/jpc_t1enc.c</file>
<function>getthebyte</function>
<score>100</score>
<ordered>true</ordered>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;oldpos &gt;= 0L&quot;}}</description>
<line>185</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;in-&gt;cnt_ &lt;= 0&quot;}}</description>
<line>187</line>
<path_event></path_event>
</event>
<event>
<main>true</main>
<tag>check_return</tag>
<description>{CovLStr{v1}{Calling function {0} without checking return value (as is done elsewhere {1} out of {2} times).}{&quot;jas_stream_seek(jas_stream_t *, long, int)&quot;}{17}{22}}</description>
<line>188</line>
</event>
<event>
<event_set>1</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_stream_seek(cmpt-&gt;stream_, 0L, 0)&quot;}{&quot;jas_stream_seek(cmpt-&gt;stream_, 0L, 0) &lt; 0L&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_image.c</file>
<line>330</line>
</event>
<event>
<event_set>2</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_stream_seek(cmpt-&gt;stream_, size - 1L, 0)&quot;}{&quot;jas_stream_seek(cmpt-&gt;stream_, size - 1L, 0) &lt; 0L&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_image.c</file>
<line>330</line>
</event>
<event>
<event_set>3</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_stream_seek(cmpt-&gt;stream_, (cmpt-&gt;width_ * (y + i) + x) * cmpt-&gt;cps_, 0)&quot;}{&quot;jas_stream_seek(cmpt-&gt;stream_, (cmpt-&gt;width_ * (y + i) + x) * cmpt-&gt;cps_, 0) &lt; 0L&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_image.c</file>
<line>490</line>
</event>
<event>
<event_set>4</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_stream_seek(cmpt-&gt;stream_, (cmpt-&gt;width_ * (y + i) + x) * cmpt-&gt;cps_, 0)&quot;}{&quot;jas_stream_seek(cmpt-&gt;stream_, (cmpt-&gt;width_ * (y + i) + x) * cmpt-&gt;cps_, 0) &lt; 0L&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_image.c</file>
<line>439</line>
</event>
<event>
<event_set>5</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_stream_seek(cmpt-&gt;stream_, 0L, 0)&quot;}{&quot;jas_stream_seek(cmpt-&gt;stream_, 0L, 0)&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_image.c</file>
<line>270</line>
</event>
<event>
<tag>unchecked_value</tag>
<description>{CovLStr{v1}{No check of the return value of {0}.}{&quot;jas_stream_seek(in, oldpos, 0)&quot;}}</description>
<line>188</line>
</event>
<extra>jas_stream_seek</extra>
<subcategory>none</subcategory>
</error>
<error>
<checker>CHECKED_RETURN</checker>
<template>checked_return_multievent_v1</template>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/jpc/jpc_t2enc.c</file>
<function>jpc_enc_encpkt</function>
<score>100</score>
<ordered>true</ordered>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;cp-&gt;tcp.csty &amp; 2&quot;}}</description>
<line>195</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;!(ms = jpc_ms_create(65425))&quot;}}</description>
<line>196</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>198</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;jpc_putms(out, enc-&gt;cstate, ms)&quot;}}</description>
<line>200</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>202</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;outb&quot;}}</description>
<line>207</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;outb-&gt;openmode_ &amp; 2&quot;}}</description>
<line>209</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;--outb-&gt;cnt_ &lt; 0&quot;}}</description>
<line>209</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;outb-&gt;buf_ == 65280U&quot;}}</description>
<line>209</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!(outb-&gt;stream_-&gt;flags_ &amp; 7)&quot;}}</description>
<line>209</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;outb-&gt;stream_-&gt;rwlimit_ &gt;= 0L&quot;}}</description>
<line>209</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;outb-&gt;stream_-&gt;rwcnt_ &gt;= outb-&gt;stream_-&gt;rwlimit_&quot;}}</description>
<line>209</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;--outb-&gt;stream_-&gt;cnt_ &lt; 0&quot;}}</description>
<line>209</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;(outb-&gt;stream_-&gt;bufmode_ |= 0x20) , (--outb-&gt;stream_-&gt;cnt_ &lt; 0)&quot;}}</description>
<line>209</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;(!(outb-&gt;stream_-&gt;flags_ &amp; 7) ? (outb-&gt;stream_-&gt;rwlimit_ &gt;= 0L &amp;&amp; outb-&gt;stream_-&gt;rwcnt_ &gt;= outb-&gt;stream_-&gt;rwlimit_) ? (outb-&gt;stream_-&gt;flags_ |= 4) , -1 : (((outb-&gt;stream_-&gt;bufmode_ |= 0x20) , (--outb-&gt;stream_-&gt;cnt_ &lt; 0)) ? jas_stream_flushbuf(outb-&gt;stream_, (unsigned char)(outb-&gt;buf_ &gt;&gt; 8)) : ((++outb-&gt;stream_-&gt;rwcnt_) , ((int)(*outb-&gt;stream_-&gt;ptr_++ = outb-&gt;buf_ &gt;&gt; 8)))) : -1) == -1&quot;}}</description>
<line>209</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;(((outb-&gt;openmode_ &amp; 2) ? (void)0 : __assert_fail(&quot;(outb)-&gt;openmode_ &amp; 0x02&quot;, &quot;jpc_t2enc.c&quot;, 209U, &lt;anonymous&gt;)) , ((--outb-&gt;cnt_ &lt; 0) ? (outb-&gt;buf_ = (outb-&gt;buf_ &lt;&lt; 8) &amp; 0xffffU) , (outb-&gt;cnt_ = ((outb-&gt;buf_ == 65280U) ? 6 : 7)) , (outb-&gt;buf_ |= 1 &lt;&lt; outb-&gt;cnt_) , (((!(outb-&gt;stream_-&gt;flags_ &amp; 7) ? (outb-&gt;stream_-&gt;rwlimit_ &gt;= 0L &amp;&amp; outb-&gt;stream_-&gt;rwcnt_ &gt;= outb-&gt;stream_-&gt;rwlimit_) ? (outb-&gt;stream_-&gt;flags_ |= 4) , -1 : (((outb-&gt;stream_-&gt;bufmode_ |= 0x20) , (--outb-&gt;stream_-&gt;cnt_ &lt; 0)) ? jas_stream_flushbuf(outb-&gt;stream_, (unsigned char)(outb-&gt;buf_ &gt;&gt; 8)) : ((++outb-&gt;stream_-&gt;rwcnt_) , ((int)(*outb-&gt;stream_-&gt;ptr_++ = outb-&gt;buf_ &gt;&gt; 8)))) : -1) == -1) ? -1 : 1) : ((outb-&gt;buf_ |= 1 &lt;&lt; outb-&gt;cnt_) , 1))) == -1&quot;}}</description>
<line>209</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>211</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;band != endbands&quot;}}</description>
<line>218</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!band-&gt;data&quot;}}</description>
<line>219</line>
<path_event></path_event>
</event>
<event>
<tag>continue</tag>
<description>{CovLStr{v1}{Continuing loop}}</description>
<line>220</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Looping back}}</description>
<line>329</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;band != endbands&quot;}}</description>
<line>218</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;!band-&gt;data&quot;}}</description>
<line>219</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>221</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;!prc-&gt;cblks&quot;}}</description>
<line>223</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>225</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;cblk != endcblks&quot;}}</description>
<line>228</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!lyrno&quot;}}</description>
<line>229</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass&quot;}}</description>
<line>234</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass-&gt;lyrno == lyrno&quot;}}</description>
<line>234</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;included&quot;}}</description>
<line>235</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!cblk-&gt;numencpasses&quot;}}</description>
<line>235</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass-&gt;lyrno == lyrno&quot;}}</description>
<line>236</line>
<path_event></path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>241</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>228</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;cblk != endcblks&quot;}}</description>
<line>228</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!lyrno&quot;}}</description>
<line>229</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;pass&quot;}}</description>
<line>234</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;included&quot;}}</description>
<line>235</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>240</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>241</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>228</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;cblk != endcblks&quot;}}</description>
<line>228</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>241</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;cblk != endcblks&quot;}}</description>
<line>244</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass&quot;}}</description>
<line>246</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass-&gt;lyrno == lyrno&quot;}}</description>
<line>246</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!cblk-&gt;numencpasses&quot;}}</description>
<line>247</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;jpc_tagtree_encode(prc-&gt;incltree, leaf, lyrno + 1, outb) &lt; 0&quot;}}</description>
<line>250</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>253</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_fallthrough</tag>
<description>{CovLStr{v1}{Falling through to end of if statement}}</description>
<line>254</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>258</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;!included&quot;}}</description>
<line>260</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>262</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!cblk-&gt;numencpasses&quot;}}</description>
<line>263</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;true&quot;}}</description>
<line>266</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;(ret = jpc_tagtree_encode(prc-&gt;nlibtree, leaf, i, outb)) &lt; 0&quot;}}</description>
<line>267</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>269</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;ret&quot;}}</description>
<line>270</line>
<path_event></path_event>
</event>
<event>
<tag>break</tag>
<description>{CovLStr{v1}{Breaking from loop}}</description>
<line>271</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>274</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;leaf-&gt;known_&quot;}}</description>
<line>275</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;i == leaf-&gt;value_ + 1&quot;}}</description>
<line>275</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;endpass != endpasses&quot;}}</description>
<line>281</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;endpass-&gt;lyrno == lyrno&quot;}}</description>
<line>281</line>
<path_event></path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>283</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>281</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;endpass != endpasses&quot;}}</description>
<line>281</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>283</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;jpc_putnumnewpasses(outb, numnewpasses)&quot;}}</description>
<line>285</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>287</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass != endpass&quot;}}</description>
<line>294</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass-&gt;term&quot;}}</description>
<line>295</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;t1 - t2 &gt; 0&quot;}}</description>
<line>299</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;adjust &gt; maxadjust&quot;}}</description>
<line>300</line>
<path_event></path_event>
</event>
<event>
<tag>if_fallthrough</tag>
<description>{CovLStr{v1}{Falling through to end of if statement}}</description>
<line>303</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>305</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>306</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>294</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass != endpass&quot;}}</description>
<line>294</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass-&gt;term&quot;}}</description>
<line>295</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;t1 - t2 &gt; 0&quot;}}</description>
<line>299</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;adjust &gt; maxadjust&quot;}}</description>
<line>300</line>
<path_event></path_event>
</event>
<event>
<tag>if_fallthrough</tag>
<description>{CovLStr{v1}{Falling through to end of if statement}}</description>
<line>303</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>305</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>306</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>294</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass != endpass&quot;}}</description>
<line>294</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;pass-&gt;term&quot;}}</description>
<line>295</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass == lastpass&quot;}}</description>
<line>295</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;t1 - t2 &gt; 0&quot;}}</description>
<line>299</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;adjust &gt; maxadjust&quot;}}</description>
<line>300</line>
<path_event></path_event>
</event>
<event>
<tag>if_fallthrough</tag>
<description>{CovLStr{v1}{Falling through to end of if statement}}</description>
<line>303</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>305</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>306</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>294</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass != endpass&quot;}}</description>
<line>294</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;pass-&gt;term&quot;}}</description>
<line>295</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;pass == lastpass&quot;}}</description>
<line>295</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>else_branch</tag>
<description>{CovLStr{v1}{Reached else branch}}</description>
<line>303</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>306</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>294</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass != endpass&quot;}}</description>
<line>294</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;pass-&gt;term&quot;}}</description>
<line>295</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass == lastpass&quot;}}</description>
<line>295</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;t1 - t2 &gt; 0&quot;}}</description>
<line>299</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;adjust &gt; maxadjust&quot;}}</description>
<line>300</line>
<path_event></path_event>
</event>
<event>
<tag>if_fallthrough</tag>
<description>{CovLStr{v1}{Falling through to end of if statement}}</description>
<line>303</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>305</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>306</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>294</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass != endpass&quot;}}</description>
<line>294</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;pass-&gt;term&quot;}}</description>
<line>295</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass == lastpass&quot;}}</description>
<line>295</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;t1 - t2 &gt; 0&quot;}}</description>
<line>299</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;adjust &gt; maxadjust&quot;}}</description>
<line>300</line>
<path_event></path_event>
</event>
<event>
<tag>if_fallthrough</tag>
<description>{CovLStr{v1}{Falling through to end of if statement}}</description>
<line>303</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>305</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>306</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>294</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;pass != endpass&quot;}}</description>
<line>294</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>306</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;jpc_putcommacode(outb, maxadjust)&quot;}}</description>
<line>307</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>309</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass != endpass&quot;}}</description>
<line>315</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;pass-&gt;term&quot;}}</description>
<line>316</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass == lastpass&quot;}}</description>
<line>316</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;jpc_firstone(datalen) &lt; cblk-&gt;numlenbits + jpc_floorlog2(passcount)&quot;}}</description>
<line>318</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;jpc_bitstream_putbits(outb, cblk-&gt;numlenbits + jpc_floorlog2(passcount), datalen) == -1&quot;}}</description>
<line>319</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>321</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_fallthrough</tag>
<description>{CovLStr{v1}{Falling through to end of if statement}}</description>
<line>324</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>326</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>327</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>315</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass != endpass&quot;}}</description>
<line>315</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;pass-&gt;term&quot;}}</description>
<line>316</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass == lastpass&quot;}}</description>
<line>316</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;jpc_firstone(datalen) &lt; cblk-&gt;numlenbits + jpc_floorlog2(passcount)&quot;}}</description>
<line>318</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;jpc_bitstream_putbits(outb, cblk-&gt;numlenbits + jpc_floorlog2(passcount), datalen) == -1&quot;}}</description>
<line>319</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>321</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_fallthrough</tag>
<description>{CovLStr{v1}{Falling through to end of if statement}}</description>
<line>324</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>326</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>327</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>315</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass != endpass&quot;}}</description>
<line>315</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;pass-&gt;term&quot;}}</description>
<line>316</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;pass == lastpass&quot;}}</description>
<line>316</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>else_branch</tag>
<description>{CovLStr{v1}{Reached else branch}}</description>
<line>324</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>327</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>315</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;pass != endpass&quot;}}</description>
<line>315</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>327</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>328</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>244</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;cblk != endcblks&quot;}}</description>
<line>244</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass&quot;}}</description>
<line>246</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass-&gt;lyrno == lyrno&quot;}}</description>
<line>246</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!cblk-&gt;numencpasses&quot;}}</description>
<line>247</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;jpc_tagtree_encode(prc-&gt;incltree, leaf, lyrno + 1, outb) &lt; 0&quot;}}</description>
<line>250</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>253</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_fallthrough</tag>
<description>{CovLStr{v1}{Falling through to end of if statement}}</description>
<line>254</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>258</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;!included&quot;}}</description>
<line>260</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>262</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!cblk-&gt;numencpasses&quot;}}</description>
<line>263</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;true&quot;}}</description>
<line>266</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;(ret = jpc_tagtree_encode(prc-&gt;nlibtree, leaf, i, outb)) &lt; 0&quot;}}</description>
<line>267</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>269</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;ret&quot;}}</description>
<line>270</line>
<path_event></path_event>
</event>
<event>
<tag>break</tag>
<description>{CovLStr{v1}{Breaking from loop}}</description>
<line>271</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>274</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;leaf-&gt;known_&quot;}}</description>
<line>275</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;i == leaf-&gt;value_ + 1&quot;}}</description>
<line>275</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;endpass != endpasses&quot;}}</description>
<line>281</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;endpass-&gt;lyrno == lyrno&quot;}}</description>
<line>281</line>
<path_event></path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>283</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>281</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;endpass != endpasses&quot;}}</description>
<line>281</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>283</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;jpc_putnumnewpasses(outb, numnewpasses)&quot;}}</description>
<line>285</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>287</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass != endpass&quot;}}</description>
<line>294</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;pass-&gt;term&quot;}}</description>
<line>295</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass == lastpass&quot;}}</description>
<line>295</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;t1 - t2 &gt; 0&quot;}}</description>
<line>299</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;adjust &gt; maxadjust&quot;}}</description>
<line>300</line>
<path_event></path_event>
</event>
<event>
<tag>if_fallthrough</tag>
<description>{CovLStr{v1}{Falling through to end of if statement}}</description>
<line>303</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>305</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>306</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>294</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;pass != endpass&quot;}}</description>
<line>294</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>306</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;jpc_putcommacode(outb, maxadjust)&quot;}}</description>
<line>307</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>309</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass != endpass&quot;}}</description>
<line>315</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;pass-&gt;term&quot;}}</description>
<line>316</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass == lastpass&quot;}}</description>
<line>316</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;jpc_firstone(datalen) &lt; cblk-&gt;numlenbits + jpc_floorlog2(passcount)&quot;}}</description>
<line>318</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;jpc_bitstream_putbits(outb, cblk-&gt;numlenbits + jpc_floorlog2(passcount), datalen) == -1&quot;}}</description>
<line>319</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>321</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_fallthrough</tag>
<description>{CovLStr{v1}{Falling through to end of if statement}}</description>
<line>324</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>326</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>327</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>315</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;pass != endpass&quot;}}</description>
<line>315</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>327</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>328</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>244</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;cblk != endcblks&quot;}}</description>
<line>244</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass&quot;}}</description>
<line>246</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass-&gt;lyrno == lyrno&quot;}}</description>
<line>246</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!cblk-&gt;numencpasses&quot;}}</description>
<line>247</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;jpc_tagtree_encode(prc-&gt;incltree, leaf, lyrno + 1, outb) &lt; 0&quot;}}</description>
<line>250</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>253</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_fallthrough</tag>
<description>{CovLStr{v1}{Falling through to end of if statement}}</description>
<line>254</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>258</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;!included&quot;}}</description>
<line>260</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>262</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!cblk-&gt;numencpasses&quot;}}</description>
<line>263</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;true&quot;}}</description>
<line>266</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;(ret = jpc_tagtree_encode(prc-&gt;nlibtree, leaf, i, outb)) &lt; 0&quot;}}</description>
<line>267</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>269</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;ret&quot;}}</description>
<line>270</line>
<path_event></path_event>
</event>
<event>
<tag>break</tag>
<description>{CovLStr{v1}{Breaking from loop}}</description>
<line>271</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>274</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;leaf-&gt;known_&quot;}}</description>
<line>275</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;i == leaf-&gt;value_ + 1&quot;}}</description>
<line>275</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;endpass != endpasses&quot;}}</description>
<line>281</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;endpass-&gt;lyrno == lyrno&quot;}}</description>
<line>281</line>
<path_event></path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>283</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>281</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;endpass != endpasses&quot;}}</description>
<line>281</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>283</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;jpc_putnumnewpasses(outb, numnewpasses)&quot;}}</description>
<line>285</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>287</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass != endpass&quot;}}</description>
<line>294</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;pass-&gt;term&quot;}}</description>
<line>295</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass == lastpass&quot;}}</description>
<line>295</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;t1 - t2 &gt; 0&quot;}}</description>
<line>299</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;adjust &gt; maxadjust&quot;}}</description>
<line>300</line>
<path_event></path_event>
</event>
<event>
<tag>if_fallthrough</tag>
<description>{CovLStr{v1}{Falling through to end of if statement}}</description>
<line>303</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>305</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>306</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>294</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;pass != endpass&quot;}}</description>
<line>294</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>306</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;jpc_putcommacode(outb, maxadjust)&quot;}}</description>
<line>307</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>309</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass != endpass&quot;}}</description>
<line>315</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;pass-&gt;term&quot;}}</description>
<line>316</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass == lastpass&quot;}}</description>
<line>316</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;jpc_firstone(datalen) &lt; cblk-&gt;numlenbits + jpc_floorlog2(passcount)&quot;}}</description>
<line>318</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;jpc_bitstream_putbits(outb, cblk-&gt;numlenbits + jpc_floorlog2(passcount), datalen) == -1&quot;}}</description>
<line>319</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>321</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_fallthrough</tag>
<description>{CovLStr{v1}{Falling through to end of if statement}}</description>
<line>324</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>326</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>327</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>315</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;pass != endpass&quot;}}</description>
<line>315</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>327</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>328</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>244</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;cblk != endcblks&quot;}}</description>
<line>244</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;pass&quot;}}</description>
<line>246</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!cblk-&gt;numencpasses&quot;}}</description>
<line>247</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;jpc_tagtree_encode(prc-&gt;incltree, leaf, lyrno + 1, outb) &lt; 0&quot;}}</description>
<line>250</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>253</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_fallthrough</tag>
<description>{CovLStr{v1}{Falling through to end of if statement}}</description>
<line>254</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>258</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!included&quot;}}</description>
<line>260</line>
<path_event></path_event>
</event>
<event>
<tag>continue</tag>
<description>{CovLStr{v1}{Continuing loop}}</description>
<line>261</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Looping back}}</description>
<line>328</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;cblk != endcblks&quot;}}</description>
<line>244</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>328</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>329</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>218</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;band != endbands&quot;}}</description>
<line>218</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>329</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;cp-&gt;tcp.csty &amp; 4&quot;}}</description>
<line>334</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;!(ms = jpc_ms_create(65426))&quot;}}</description>
<line>335</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>337</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;band != endbands&quot;}}</description>
<line>345</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!band-&gt;data&quot;}}</description>
<line>346</line>
<path_event></path_event>
</event>
<event>
<tag>continue</tag>
<description>{CovLStr{v1}{Continuing loop}}</description>
<line>347</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Looping back}}</description>
<line>383</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;band != endbands&quot;}}</description>
<line>345</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;!band-&gt;data&quot;}}</description>
<line>346</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>348</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;!prc-&gt;cblks&quot;}}</description>
<line>350</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>352</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;cblk != endcblks&quot;}}</description>
<line>354</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!pass&quot;}}</description>
<line>357</line>
<path_event></path_event>
</event>
<event>
<tag>continue</tag>
<description>{CovLStr{v1}{Continuing loop}}</description>
<line>358</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Looping back}}</description>
<line>382</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;cblk != endcblks&quot;}}</description>
<line>354</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;!pass&quot;}}</description>
<line>357</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>359</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;pass-&gt;lyrno != lyrno&quot;}}</description>
<line>360</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>363</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;endpass != endpasses&quot;}}</description>
<line>368</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;endpass-&gt;lyrno == lyrno&quot;}}</description>
<line>368</line>
<path_event></path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>370</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>368</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;endpass != endpasses&quot;}}</description>
<line>368</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>370</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<main>true</main>
<tag>check_return</tag>
<description>{CovLStr{v1}{Calling function {0} without checking return value (as is done elsewhere {1} out of {2} times).}{&quot;jas_stream_seek(jas_stream_t *, long, int)&quot;}{17}{22}}</description>
<line>374</line>
</event>
<event>
<event_set>1</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_stream_seek(cmpt-&gt;stream_, 0L, 0)&quot;}{&quot;jas_stream_seek(cmpt-&gt;stream_, 0L, 0) &lt; 0L&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_image.c</file>
<line>330</line>
</event>
<event>
<event_set>2</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_stream_seek(cmpt-&gt;stream_, size - 1L, 0)&quot;}{&quot;jas_stream_seek(cmpt-&gt;stream_, size - 1L, 0) &lt; 0L&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_image.c</file>
<line>330</line>
</event>
<event>
<event_set>3</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_stream_seek(cmpt-&gt;stream_, (cmpt-&gt;width_ * (y + i) + x) * cmpt-&gt;cps_, 0)&quot;}{&quot;jas_stream_seek(cmpt-&gt;stream_, (cmpt-&gt;width_ * (y + i) + x) * cmpt-&gt;cps_, 0) &lt; 0L&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_image.c</file>
<line>490</line>
</event>
<event>
<event_set>4</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_stream_seek(cmpt-&gt;stream_, (cmpt-&gt;width_ * (y + i) + x) * cmpt-&gt;cps_, 0)&quot;}{&quot;jas_stream_seek(cmpt-&gt;stream_, (cmpt-&gt;width_ * (y + i) + x) * cmpt-&gt;cps_, 0) &lt; 0L&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_image.c</file>
<line>439</line>
</event>
<event>
<event_set>5</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_stream_seek(cmpt-&gt;stream_, 0L, 0)&quot;}{&quot;jas_stream_seek(cmpt-&gt;stream_, 0L, 0)&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_image.c</file>
<line>270</line>
</event>
<event>
<tag>unchecked_value</tag>
<description>{CovLStr{v1}{No check of the return value of {0}.}{&quot;jas_stream_seek(cblk-&gt;stream, startpass-&gt;start, 0)&quot;}}</description>
<line>374</line>
</event>
<extra>jas_stream_seek</extra>
<subcategory>none</subcategory>
</error>
<error>
<checker>CHECKED_RETURN</checker>
<template>checked_return_multievent_v1</template>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/jpc/jpc_t2enc.c</file>
<function>jpc_enc_encpkt</function>
<score>100</score>
<ordered>true</ordered>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;cp-&gt;tcp.csty &amp; 2&quot;}}</description>
<line>195</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;!(ms = jpc_ms_create(65425))&quot;}}</description>
<line>196</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>198</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;jpc_putms(out, enc-&gt;cstate, ms)&quot;}}</description>
<line>200</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>202</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;outb&quot;}}</description>
<line>207</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;outb-&gt;openmode_ &amp; 2&quot;}}</description>
<line>209</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;--outb-&gt;cnt_ &lt; 0&quot;}}</description>
<line>209</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;outb-&gt;buf_ == 65280U&quot;}}</description>
<line>209</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!(outb-&gt;stream_-&gt;flags_ &amp; 7)&quot;}}</description>
<line>209</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;outb-&gt;stream_-&gt;rwlimit_ &gt;= 0L&quot;}}</description>
<line>209</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;outb-&gt;stream_-&gt;rwcnt_ &gt;= outb-&gt;stream_-&gt;rwlimit_&quot;}}</description>
<line>209</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;--outb-&gt;stream_-&gt;cnt_ &lt; 0&quot;}}</description>
<line>209</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;(outb-&gt;stream_-&gt;bufmode_ |= 0x20) , (--outb-&gt;stream_-&gt;cnt_ &lt; 0)&quot;}}</description>
<line>209</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;(!(outb-&gt;stream_-&gt;flags_ &amp; 7) ? (outb-&gt;stream_-&gt;rwlimit_ &gt;= 0L &amp;&amp; outb-&gt;stream_-&gt;rwcnt_ &gt;= outb-&gt;stream_-&gt;rwlimit_) ? (outb-&gt;stream_-&gt;flags_ |= 4) , -1 : (((outb-&gt;stream_-&gt;bufmode_ |= 0x20) , (--outb-&gt;stream_-&gt;cnt_ &lt; 0)) ? jas_stream_flushbuf(outb-&gt;stream_, (unsigned char)(outb-&gt;buf_ &gt;&gt; 8)) : ((++outb-&gt;stream_-&gt;rwcnt_) , ((int)(*outb-&gt;stream_-&gt;ptr_++ = outb-&gt;buf_ &gt;&gt; 8)))) : -1) == -1&quot;}}</description>
<line>209</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;(((outb-&gt;openmode_ &amp; 2) ? (void)0 : __assert_fail(&quot;(outb)-&gt;openmode_ &amp; 0x02&quot;, &quot;jpc_t2enc.c&quot;, 209U, &lt;anonymous&gt;)) , ((--outb-&gt;cnt_ &lt; 0) ? (outb-&gt;buf_ = (outb-&gt;buf_ &lt;&lt; 8) &amp; 0xffffU) , (outb-&gt;cnt_ = ((outb-&gt;buf_ == 65280U) ? 6 : 7)) , (outb-&gt;buf_ |= 1 &lt;&lt; outb-&gt;cnt_) , (((!(outb-&gt;stream_-&gt;flags_ &amp; 7) ? (outb-&gt;stream_-&gt;rwlimit_ &gt;= 0L &amp;&amp; outb-&gt;stream_-&gt;rwcnt_ &gt;= outb-&gt;stream_-&gt;rwlimit_) ? (outb-&gt;stream_-&gt;flags_ |= 4) , -1 : (((outb-&gt;stream_-&gt;bufmode_ |= 0x20) , (--outb-&gt;stream_-&gt;cnt_ &lt; 0)) ? jas_stream_flushbuf(outb-&gt;stream_, (unsigned char)(outb-&gt;buf_ &gt;&gt; 8)) : ((++outb-&gt;stream_-&gt;rwcnt_) , ((int)(*outb-&gt;stream_-&gt;ptr_++ = outb-&gt;buf_ &gt;&gt; 8)))) : -1) == -1) ? -1 : 1) : ((outb-&gt;buf_ |= 1 &lt;&lt; outb-&gt;cnt_) , 1))) == -1&quot;}}</description>
<line>209</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>211</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;band != endbands&quot;}}</description>
<line>218</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!band-&gt;data&quot;}}</description>
<line>219</line>
<path_event></path_event>
</event>
<event>
<tag>continue</tag>
<description>{CovLStr{v1}{Continuing loop}}</description>
<line>220</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Looping back}}</description>
<line>329</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;band != endbands&quot;}}</description>
<line>218</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;!band-&gt;data&quot;}}</description>
<line>219</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>221</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;!prc-&gt;cblks&quot;}}</description>
<line>223</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>225</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;cblk != endcblks&quot;}}</description>
<line>228</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!lyrno&quot;}}</description>
<line>229</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass&quot;}}</description>
<line>234</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass-&gt;lyrno == lyrno&quot;}}</description>
<line>234</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;included&quot;}}</description>
<line>235</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!cblk-&gt;numencpasses&quot;}}</description>
<line>235</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass-&gt;lyrno == lyrno&quot;}}</description>
<line>236</line>
<path_event></path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>241</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>228</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;cblk != endcblks&quot;}}</description>
<line>228</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!lyrno&quot;}}</description>
<line>229</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;pass&quot;}}</description>
<line>234</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;included&quot;}}</description>
<line>235</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>240</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>241</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>228</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;cblk != endcblks&quot;}}</description>
<line>228</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>241</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;cblk != endcblks&quot;}}</description>
<line>244</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass&quot;}}</description>
<line>246</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass-&gt;lyrno == lyrno&quot;}}</description>
<line>246</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!cblk-&gt;numencpasses&quot;}}</description>
<line>247</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;jpc_tagtree_encode(prc-&gt;incltree, leaf, lyrno + 1, outb) &lt; 0&quot;}}</description>
<line>250</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>253</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_fallthrough</tag>
<description>{CovLStr{v1}{Falling through to end of if statement}}</description>
<line>254</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>258</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;!included&quot;}}</description>
<line>260</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>262</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!cblk-&gt;numencpasses&quot;}}</description>
<line>263</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;true&quot;}}</description>
<line>266</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;(ret = jpc_tagtree_encode(prc-&gt;nlibtree, leaf, i, outb)) &lt; 0&quot;}}</description>
<line>267</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>269</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;ret&quot;}}</description>
<line>270</line>
<path_event></path_event>
</event>
<event>
<tag>break</tag>
<description>{CovLStr{v1}{Breaking from loop}}</description>
<line>271</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>274</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;leaf-&gt;known_&quot;}}</description>
<line>275</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;i == leaf-&gt;value_ + 1&quot;}}</description>
<line>275</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;endpass != endpasses&quot;}}</description>
<line>281</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;endpass-&gt;lyrno == lyrno&quot;}}</description>
<line>281</line>
<path_event></path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>283</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>281</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;endpass != endpasses&quot;}}</description>
<line>281</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>283</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;jpc_putnumnewpasses(outb, numnewpasses)&quot;}}</description>
<line>285</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>287</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass != endpass&quot;}}</description>
<line>294</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass-&gt;term&quot;}}</description>
<line>295</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;t1 - t2 &gt; 0&quot;}}</description>
<line>299</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;adjust &gt; maxadjust&quot;}}</description>
<line>300</line>
<path_event></path_event>
</event>
<event>
<tag>if_fallthrough</tag>
<description>{CovLStr{v1}{Falling through to end of if statement}}</description>
<line>303</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>305</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>306</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>294</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass != endpass&quot;}}</description>
<line>294</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass-&gt;term&quot;}}</description>
<line>295</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;t1 - t2 &gt; 0&quot;}}</description>
<line>299</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;adjust &gt; maxadjust&quot;}}</description>
<line>300</line>
<path_event></path_event>
</event>
<event>
<tag>if_fallthrough</tag>
<description>{CovLStr{v1}{Falling through to end of if statement}}</description>
<line>303</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>305</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>306</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>294</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass != endpass&quot;}}</description>
<line>294</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;pass-&gt;term&quot;}}</description>
<line>295</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass == lastpass&quot;}}</description>
<line>295</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;t1 - t2 &gt; 0&quot;}}</description>
<line>299</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;adjust &gt; maxadjust&quot;}}</description>
<line>300</line>
<path_event></path_event>
</event>
<event>
<tag>if_fallthrough</tag>
<description>{CovLStr{v1}{Falling through to end of if statement}}</description>
<line>303</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>305</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>306</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>294</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass != endpass&quot;}}</description>
<line>294</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;pass-&gt;term&quot;}}</description>
<line>295</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;pass == lastpass&quot;}}</description>
<line>295</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>else_branch</tag>
<description>{CovLStr{v1}{Reached else branch}}</description>
<line>303</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>306</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>294</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass != endpass&quot;}}</description>
<line>294</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;pass-&gt;term&quot;}}</description>
<line>295</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass == lastpass&quot;}}</description>
<line>295</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;t1 - t2 &gt; 0&quot;}}</description>
<line>299</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;adjust &gt; maxadjust&quot;}}</description>
<line>300</line>
<path_event></path_event>
</event>
<event>
<tag>if_fallthrough</tag>
<description>{CovLStr{v1}{Falling through to end of if statement}}</description>
<line>303</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>305</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>306</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>294</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass != endpass&quot;}}</description>
<line>294</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;pass-&gt;term&quot;}}</description>
<line>295</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass == lastpass&quot;}}</description>
<line>295</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;t1 - t2 &gt; 0&quot;}}</description>
<line>299</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;adjust &gt; maxadjust&quot;}}</description>
<line>300</line>
<path_event></path_event>
</event>
<event>
<tag>if_fallthrough</tag>
<description>{CovLStr{v1}{Falling through to end of if statement}}</description>
<line>303</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>305</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>306</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>294</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;pass != endpass&quot;}}</description>
<line>294</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>306</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;jpc_putcommacode(outb, maxadjust)&quot;}}</description>
<line>307</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>309</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass != endpass&quot;}}</description>
<line>315</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;pass-&gt;term&quot;}}</description>
<line>316</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass == lastpass&quot;}}</description>
<line>316</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;jpc_firstone(datalen) &lt; cblk-&gt;numlenbits + jpc_floorlog2(passcount)&quot;}}</description>
<line>318</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;jpc_bitstream_putbits(outb, cblk-&gt;numlenbits + jpc_floorlog2(passcount), datalen) == -1&quot;}}</description>
<line>319</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>321</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_fallthrough</tag>
<description>{CovLStr{v1}{Falling through to end of if statement}}</description>
<line>324</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>326</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>327</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>315</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass != endpass&quot;}}</description>
<line>315</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;pass-&gt;term&quot;}}</description>
<line>316</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass == lastpass&quot;}}</description>
<line>316</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;jpc_firstone(datalen) &lt; cblk-&gt;numlenbits + jpc_floorlog2(passcount)&quot;}}</description>
<line>318</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;jpc_bitstream_putbits(outb, cblk-&gt;numlenbits + jpc_floorlog2(passcount), datalen) == -1&quot;}}</description>
<line>319</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>321</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_fallthrough</tag>
<description>{CovLStr{v1}{Falling through to end of if statement}}</description>
<line>324</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>326</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>327</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>315</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass != endpass&quot;}}</description>
<line>315</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;pass-&gt;term&quot;}}</description>
<line>316</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;pass == lastpass&quot;}}</description>
<line>316</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>else_branch</tag>
<description>{CovLStr{v1}{Reached else branch}}</description>
<line>324</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>327</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>315</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;pass != endpass&quot;}}</description>
<line>315</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>327</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>328</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>244</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;cblk != endcblks&quot;}}</description>
<line>244</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass&quot;}}</description>
<line>246</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass-&gt;lyrno == lyrno&quot;}}</description>
<line>246</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!cblk-&gt;numencpasses&quot;}}</description>
<line>247</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;jpc_tagtree_encode(prc-&gt;incltree, leaf, lyrno + 1, outb) &lt; 0&quot;}}</description>
<line>250</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>253</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_fallthrough</tag>
<description>{CovLStr{v1}{Falling through to end of if statement}}</description>
<line>254</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>258</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;!included&quot;}}</description>
<line>260</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>262</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!cblk-&gt;numencpasses&quot;}}</description>
<line>263</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;true&quot;}}</description>
<line>266</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;(ret = jpc_tagtree_encode(prc-&gt;nlibtree, leaf, i, outb)) &lt; 0&quot;}}</description>
<line>267</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>269</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;ret&quot;}}</description>
<line>270</line>
<path_event></path_event>
</event>
<event>
<tag>break</tag>
<description>{CovLStr{v1}{Breaking from loop}}</description>
<line>271</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>274</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;leaf-&gt;known_&quot;}}</description>
<line>275</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;i == leaf-&gt;value_ + 1&quot;}}</description>
<line>275</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;endpass != endpasses&quot;}}</description>
<line>281</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;endpass-&gt;lyrno == lyrno&quot;}}</description>
<line>281</line>
<path_event></path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>283</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>281</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;endpass != endpasses&quot;}}</description>
<line>281</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>283</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;jpc_putnumnewpasses(outb, numnewpasses)&quot;}}</description>
<line>285</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>287</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass != endpass&quot;}}</description>
<line>294</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;pass-&gt;term&quot;}}</description>
<line>295</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass == lastpass&quot;}}</description>
<line>295</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;t1 - t2 &gt; 0&quot;}}</description>
<line>299</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;adjust &gt; maxadjust&quot;}}</description>
<line>300</line>
<path_event></path_event>
</event>
<event>
<tag>if_fallthrough</tag>
<description>{CovLStr{v1}{Falling through to end of if statement}}</description>
<line>303</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>305</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>306</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>294</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;pass != endpass&quot;}}</description>
<line>294</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>306</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;jpc_putcommacode(outb, maxadjust)&quot;}}</description>
<line>307</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>309</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass != endpass&quot;}}</description>
<line>315</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;pass-&gt;term&quot;}}</description>
<line>316</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass == lastpass&quot;}}</description>
<line>316</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;jpc_firstone(datalen) &lt; cblk-&gt;numlenbits + jpc_floorlog2(passcount)&quot;}}</description>
<line>318</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;jpc_bitstream_putbits(outb, cblk-&gt;numlenbits + jpc_floorlog2(passcount), datalen) == -1&quot;}}</description>
<line>319</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>321</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_fallthrough</tag>
<description>{CovLStr{v1}{Falling through to end of if statement}}</description>
<line>324</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>326</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>327</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>315</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;pass != endpass&quot;}}</description>
<line>315</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>327</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>328</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>244</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;cblk != endcblks&quot;}}</description>
<line>244</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass&quot;}}</description>
<line>246</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass-&gt;lyrno == lyrno&quot;}}</description>
<line>246</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!cblk-&gt;numencpasses&quot;}}</description>
<line>247</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;jpc_tagtree_encode(prc-&gt;incltree, leaf, lyrno + 1, outb) &lt; 0&quot;}}</description>
<line>250</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>253</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_fallthrough</tag>
<description>{CovLStr{v1}{Falling through to end of if statement}}</description>
<line>254</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>258</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;!included&quot;}}</description>
<line>260</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>262</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!cblk-&gt;numencpasses&quot;}}</description>
<line>263</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;true&quot;}}</description>
<line>266</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;(ret = jpc_tagtree_encode(prc-&gt;nlibtree, leaf, i, outb)) &lt; 0&quot;}}</description>
<line>267</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>269</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;ret&quot;}}</description>
<line>270</line>
<path_event></path_event>
</event>
<event>
<tag>break</tag>
<description>{CovLStr{v1}{Breaking from loop}}</description>
<line>271</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>274</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;leaf-&gt;known_&quot;}}</description>
<line>275</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;i == leaf-&gt;value_ + 1&quot;}}</description>
<line>275</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;endpass != endpasses&quot;}}</description>
<line>281</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;endpass-&gt;lyrno == lyrno&quot;}}</description>
<line>281</line>
<path_event></path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>283</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>281</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;endpass != endpasses&quot;}}</description>
<line>281</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>283</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;jpc_putnumnewpasses(outb, numnewpasses)&quot;}}</description>
<line>285</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>287</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass != endpass&quot;}}</description>
<line>294</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;pass-&gt;term&quot;}}</description>
<line>295</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass == lastpass&quot;}}</description>
<line>295</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;t1 - t2 &gt; 0&quot;}}</description>
<line>299</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;adjust &gt; maxadjust&quot;}}</description>
<line>300</line>
<path_event></path_event>
</event>
<event>
<tag>if_fallthrough</tag>
<description>{CovLStr{v1}{Falling through to end of if statement}}</description>
<line>303</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>305</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>306</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>294</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;pass != endpass&quot;}}</description>
<line>294</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>306</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;jpc_putcommacode(outb, maxadjust)&quot;}}</description>
<line>307</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>309</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass != endpass&quot;}}</description>
<line>315</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;pass-&gt;term&quot;}}</description>
<line>316</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;pass == lastpass&quot;}}</description>
<line>316</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;jpc_firstone(datalen) &lt; cblk-&gt;numlenbits + jpc_floorlog2(passcount)&quot;}}</description>
<line>318</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;jpc_bitstream_putbits(outb, cblk-&gt;numlenbits + jpc_floorlog2(passcount), datalen) == -1&quot;}}</description>
<line>319</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>321</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_fallthrough</tag>
<description>{CovLStr{v1}{Falling through to end of if statement}}</description>
<line>324</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>326</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>327</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>315</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;pass != endpass&quot;}}</description>
<line>315</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>327</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>328</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>244</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;cblk != endcblks&quot;}}</description>
<line>244</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;pass&quot;}}</description>
<line>246</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!cblk-&gt;numencpasses&quot;}}</description>
<line>247</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;jpc_tagtree_encode(prc-&gt;incltree, leaf, lyrno + 1, outb) &lt; 0&quot;}}</description>
<line>250</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>253</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_fallthrough</tag>
<description>{CovLStr{v1}{Falling through to end of if statement}}</description>
<line>254</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>258</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!included&quot;}}</description>
<line>260</line>
<path_event></path_event>
</event>
<event>
<tag>continue</tag>
<description>{CovLStr{v1}{Continuing loop}}</description>
<line>261</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Looping back}}</description>
<line>328</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;cblk != endcblks&quot;}}</description>
<line>244</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>328</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>329</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>218</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;band != endbands&quot;}}</description>
<line>218</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>329</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;cp-&gt;tcp.csty &amp; 4&quot;}}</description>
<line>334</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;!(ms = jpc_ms_create(65426))&quot;}}</description>
<line>335</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>337</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<main>true</main>
<tag>check_return</tag>
<description>{CovLStr{v1}{Calling function {0} without checking return value (as is done elsewhere {1} out of {2} times).}{&quot;jpc_putms(jas_stream_t *, jpc_cstate_t *, jpc_ms_t *)&quot;}{12}{13}}</description>
<line>338</line>
</event>
<event>
<event_set>1</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_putms(enc-&gt;tmpstream, enc-&gt;cstate, enc-&gt;mrk)&quot;}{&quot;jpc_putms(enc-&gt;tmpstream, enc-&gt;cstate, enc-&gt;mrk)&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/jpc/jpc_enc.c</file>
<line>1291</line>
</event>
<event>
<event_set>2</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_putms(enc-&gt;tmpstream, enc-&gt;cstate, enc-&gt;mrk)&quot;}{&quot;jpc_putms(enc-&gt;tmpstream, enc-&gt;cstate, enc-&gt;mrk)&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/jpc/jpc_enc.c</file>
<line>1326</line>
</event>
<event>
<event_set>3</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_putms(enc-&gt;tmpstream, enc-&gt;cstate, enc-&gt;mrk)&quot;}{&quot;jpc_putms(enc-&gt;tmpstream, enc-&gt;cstate, enc-&gt;mrk)&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/jpc/jpc_enc.c</file>
<line>1358</line>
</event>
<event>
<event_set>4</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_putms(enc-&gt;tmpstream, enc-&gt;cstate, enc-&gt;mrk)&quot;}{&quot;jpc_putms(enc-&gt;tmpstream, enc-&gt;cstate, enc-&gt;mrk)&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/jpc/jpc_enc.c</file>
<line>1371</line>
</event>
<event>
<event_set>5</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_putms(enc-&gt;out, enc-&gt;cstate, enc-&gt;mrk)&quot;}{&quot;jpc_putms(enc-&gt;out, enc-&gt;cstate, enc-&gt;mrk)&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/jpc/jpc_enc.c</file>
<line>921</line>
</event>
<event>
<tag>unchecked_value</tag>
<description>{CovLStr{v1}{No check of the return value of {0}.}{&quot;jpc_putms(out, enc-&gt;cstate, ms)&quot;}}</description>
<line>338</line>
</event>
<extra>jpc_putms</extra>
<subcategory>none</subcategory>
</error>
<error>
<checker>CHECKED_RETURN</checker>
<template>checked_return_multievent_v1</template>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/mif/mif_cod.c</file>
<function>mif_getc</function>
<score>100</score>
<ordered>true</ordered>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!(in-&gt;flags_ &amp; 7)&quot;}}</description>
<line>693</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;in-&gt;rwlimit_ &gt;= 0L&quot;}}</description>
<line>693</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;in-&gt;rwcnt_ &gt;= in-&gt;rwlimit_&quot;}}</description>
<line>693</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;--in-&gt;cnt_ &lt; 0&quot;}}</description>
<line>693</line>
<path_event></path_event>
</event>
<event>
<tag>switch</tag>
<description>{CovLStr{v1}{Switch case value {0}}{&quot;92&quot;}}</description>
<line>693</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>switch_case</tag>
<description>{CovLStr{v1}{Reached case {0}}{&quot;92&quot;}}</description>
<line>708</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;in-&gt;cnt_ &lt;= 0&quot;}}</description>
<line>709</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;((in-&gt;cnt_ &lt;= 0) ? jas_stream_fillbuf(in, 0) : (int)*in-&gt;ptr_) == 10&quot;}}</description>
<line>709</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!(in-&gt;flags_ &amp; 7)&quot;}}</description>
<line>710</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;in-&gt;rwlimit_ &gt;= 0L&quot;}}</description>
<line>710</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;in-&gt;rwcnt_ &gt;= in-&gt;rwlimit_&quot;}}</description>
<line>710</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;--in-&gt;cnt_ &lt; 0&quot;}}</description>
<line>710</line>
<path_event></path_event>
</event>
<event>
<main>true</main>
<tag>check_return</tag>
<description>{CovLStr{v1}{Calling function {0} without checking return value (as is done elsewhere {1} out of {2} times).}{&quot;jas_stream_fillbuf(jas_stream_t *, int)&quot;}{58}{62}}</description>
<line>710</line>
</event>
<event>
<event_set>1</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_stream_fillbuf(in, 1)&quot;}{&quot;(c = (!(in-&gt;flags_ &amp; 7) ? (in-&gt;rwlimit_ &gt;= 0L &amp;&amp; in-&gt;rwcnt_ &gt;= in-&gt;rwlimit_) ? (in-&gt;flags_ |= 4) , -1 : ((--in-&gt;cnt_ &lt; 0) ? jas_stream_fillbuf(in, 1) : ((++in-&gt;rwcnt_) , ((int)*in-&gt;ptr_++))) : -1)) == -1&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_icc.c</file>
<line>1582</line>
</event>
<event>
<event_set>2</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_stream_fillbuf(in, 1)&quot;}{&quot;(c = (!(in-&gt;flags_ &amp; 7) ? (in-&gt;rwlimit_ &gt;= 0L &amp;&amp; in-&gt;rwcnt_ &gt;= in-&gt;rwlimit_) ? (in-&gt;flags_ |= 4) , -1 : ((--in-&gt;cnt_ &lt; 0) ? jas_stream_fillbuf(in, 1) : ((++in-&gt;rwcnt_) , ((int)*in-&gt;ptr_++))) : -1)) == -1&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_icc.c</file>
<line>1593</line>
</event>
<event>
<event_set>3</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_stream_fillbuf(in, 1)&quot;}{&quot;(!(in-&gt;flags_ &amp; 7) ? (in-&gt;rwlimit_ &gt;= 0L &amp;&amp; in-&gt;rwcnt_ &gt;= in-&gt;rwlimit_) ? (in-&gt;flags_ |= 4) , -1 : ((--in-&gt;cnt_ &lt; 0) ? jas_stream_fillbuf(in, 1) : ((++in-&gt;rwcnt_) , ((int)*in-&gt;ptr_++))) : -1) == -1&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_icc.c</file>
<line>1449</line>
</event>
<event>
<event_set>4</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_stream_fillbuf(in, 1)&quot;}{&quot;(!(in-&gt;flags_ &amp; 7) ? (in-&gt;rwlimit_ &gt;= 0L &amp;&amp; in-&gt;rwcnt_ &gt;= in-&gt;rwlimit_) ? (in-&gt;flags_ |= 4) , -1 : ((--in-&gt;cnt_ &lt; 0) ? jas_stream_fillbuf(in, 1) : ((++in-&gt;rwcnt_) , ((int)*in-&gt;ptr_++))) : -1) == -1&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_icc.c</file>
<line>1280</line>
</event>
<event>
<event_set>5</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_stream_fillbuf(in, 1)&quot;}{&quot;(c = (!(in-&gt;flags_ &amp; 7) ? (in-&gt;rwlimit_ &gt;= 0L &amp;&amp; in-&gt;rwcnt_ &gt;= in-&gt;rwlimit_) ? (in-&gt;flags_ |= 4) , -1 : ((--in-&gt;cnt_ &lt; 0) ? jas_stream_fillbuf(in, 1) : ((++in-&gt;rwcnt_) , ((int)*in-&gt;ptr_++))) : -1)) == -1&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_icc.c</file>
<line>1110</line>
</event>
<event>
<tag>unchecked_value</tag>
<description>{CovLStr{v1}{No check of the return value of {0}.}{&quot;jas_stream_fillbuf(in, 1)&quot;}}</description>
<line>710</line>
</event>
<extra>jas_stream_fillbuf</extra>
<subcategory>none</subcategory>
</error>
<error>
<checker>CHECKED_RETURN</checker>
<template>checked_return_multievent_v1</template>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_icc.c</file>
<function>jas_iccputxyz</function>
<score>100</score>
<ordered>true</ordered>
<event>
<main>true</main>
<tag>check_return</tag>
<description>{CovLStr{v1}{Calling function {0} without checking return value (as is done elsewhere {1} out of {2} times).}{&quot;jas_iccputuint(jas_stream_t *, int, unsigned long long)&quot;}{18}{28}}</description>
<line>661</line>
</event>
<event>
<event_set>1</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_iccputuint(out, 4, curv-&gt;numents)&quot;}{&quot;jas_iccputuint(out, 4, curv-&gt;numents)&quot;}}</description>
<line>1029</line>
</event>
<event>
<event_set>2</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_iccputuint(out, 2, curv-&gt;ents[i])&quot;}{&quot;jas_iccputuint(out, 2, curv-&gt;ents[i])&quot;}}</description>
<line>1032</line>
</event>
<event>
<event_set>3</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_iccputuint(out, 2, lut16-&gt;numintabents)&quot;}{&quot;jas_iccputuint(out, 2, lut16-&gt;numintabents)&quot;}}</description>
<line>1531</line>
</event>
<event>
<event_set>4</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_iccputuint(out, 2, lut16-&gt;intabsbuf[i])&quot;}{&quot;jas_iccputuint(out, 2, lut16-&gt;intabsbuf[i])&quot;}}</description>
<line>1536</line>
</event>
<event>
<event_set>5</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_iccputuint(out, 2, lut16-&gt;outtabsbuf[i])&quot;}{&quot;jas_iccputuint(out, 2, lut16-&gt;outtabsbuf[i])&quot;}}</description>
<line>1541</line>
</event>
<event>
<tag>unchecked_value</tag>
<description>{CovLStr{v1}{No check of the return value of {0}.}{&quot;jas_iccputuint(out, 4, xyz-&gt;x)&quot;}}</description>
<line>661</line>
</event>
<extra>jas_iccputuint</extra>
<subcategory>none</subcategory>
</error>
<error>
<checker>CHECKED_RETURN</checker>
<template>checked_return_multievent_v1</template>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_icc.c</file>
<function>jas_iccputxyz</function>
<score>100</score>
<ordered>true</ordered>
<event>
<main>true</main>
<tag>check_return</tag>
<description>{CovLStr{v1}{Calling function {0} without checking return value (as is done elsewhere {1} out of {2} times).}{&quot;jas_iccputuint(jas_stream_t *, int, unsigned long long)&quot;}{18}{28}}</description>
<line>662</line>
</event>
<event>
<event_set>1</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_iccputuint(out, 4, curv-&gt;numents)&quot;}{&quot;jas_iccputuint(out, 4, curv-&gt;numents)&quot;}}</description>
<line>1029</line>
</event>
<event>
<event_set>2</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_iccputuint(out, 2, curv-&gt;ents[i])&quot;}{&quot;jas_iccputuint(out, 2, curv-&gt;ents[i])&quot;}}</description>
<line>1032</line>
</event>
<event>
<event_set>3</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_iccputuint(out, 2, lut16-&gt;numintabents)&quot;}{&quot;jas_iccputuint(out, 2, lut16-&gt;numintabents)&quot;}}</description>
<line>1531</line>
</event>
<event>
<event_set>4</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_iccputuint(out, 2, lut16-&gt;intabsbuf[i])&quot;}{&quot;jas_iccputuint(out, 2, lut16-&gt;intabsbuf[i])&quot;}}</description>
<line>1536</line>
</event>
<event>
<event_set>5</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_iccputuint(out, 2, lut16-&gt;outtabsbuf[i])&quot;}{&quot;jas_iccputuint(out, 2, lut16-&gt;outtabsbuf[i])&quot;}}</description>
<line>1541</line>
</event>
<event>
<tag>unchecked_value</tag>
<description>{CovLStr{v1}{No check of the return value of {0}.}{&quot;jas_iccputuint(out, 4, xyz-&gt;y)&quot;}}</description>
<line>662</line>
</event>
<extra>jas_iccputuint</extra>
<subcategory>none</subcategory>
</error>
<error>
<checker>CHECKED_RETURN</checker>
<template>checked_return_multievent_v1</template>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_icc.c</file>
<function>jas_iccputxyz</function>
<score>100</score>
<ordered>true</ordered>
<event>
<main>true</main>
<tag>check_return</tag>
<description>{CovLStr{v1}{Calling function {0} without checking return value (as is done elsewhere {1} out of {2} times).}{&quot;jas_iccputuint(jas_stream_t *, int, unsigned long long)&quot;}{18}{28}}</description>
<line>663</line>
</event>
<event>
<event_set>1</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_iccputuint(out, 4, curv-&gt;numents)&quot;}{&quot;jas_iccputuint(out, 4, curv-&gt;numents)&quot;}}</description>
<line>1029</line>
</event>
<event>
<event_set>2</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_iccputuint(out, 2, curv-&gt;ents[i])&quot;}{&quot;jas_iccputuint(out, 2, curv-&gt;ents[i])&quot;}}</description>
<line>1032</line>
</event>
<event>
<event_set>3</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_iccputuint(out, 2, lut16-&gt;numintabents)&quot;}{&quot;jas_iccputuint(out, 2, lut16-&gt;numintabents)&quot;}}</description>
<line>1531</line>
</event>
<event>
<event_set>4</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_iccputuint(out, 2, lut16-&gt;intabsbuf[i])&quot;}{&quot;jas_iccputuint(out, 2, lut16-&gt;intabsbuf[i])&quot;}}</description>
<line>1536</line>
</event>
<event>
<event_set>5</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_iccputuint(out, 2, lut16-&gt;outtabsbuf[i])&quot;}{&quot;jas_iccputuint(out, 2, lut16-&gt;outtabsbuf[i])&quot;}}</description>
<line>1541</line>
</event>
<event>
<tag>unchecked_value</tag>
<description>{CovLStr{v1}{No check of the return value of {0}.}{&quot;jas_iccputuint(out, 4, xyz-&gt;z)&quot;}}</description>
<line>663</line>
</event>
<extra>jas_iccputuint</extra>
<subcategory>none</subcategory>
</error>
<error>
<checker>CHECKED_RETURN</checker>
<template>checked_return_multievent_v1</template>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_icc.c</file>
<function>jas_iccputtime</function>
<score>100</score>
<ordered>true</ordered>
<event>
<main>true</main>
<tag>check_return</tag>
<description>{CovLStr{v1}{Calling function {0} without checking return value (as is done elsewhere {1} out of {2} times).}{&quot;jas_iccputuint(jas_stream_t *, int, unsigned long long)&quot;}{18}{28}}</description>
<line>650</line>
</event>
<event>
<event_set>1</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_iccputuint(out, 4, curv-&gt;numents)&quot;}{&quot;jas_iccputuint(out, 4, curv-&gt;numents)&quot;}}</description>
<line>1029</line>
</event>
<event>
<event_set>2</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_iccputuint(out, 2, curv-&gt;ents[i])&quot;}{&quot;jas_iccputuint(out, 2, curv-&gt;ents[i])&quot;}}</description>
<line>1032</line>
</event>
<event>
<event_set>3</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_iccputuint(out, 2, lut16-&gt;numintabents)&quot;}{&quot;jas_iccputuint(out, 2, lut16-&gt;numintabents)&quot;}}</description>
<line>1531</line>
</event>
<event>
<event_set>4</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_iccputuint(out, 2, lut16-&gt;intabsbuf[i])&quot;}{&quot;jas_iccputuint(out, 2, lut16-&gt;intabsbuf[i])&quot;}}</description>
<line>1536</line>
</event>
<event>
<event_set>5</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_iccputuint(out, 2, lut16-&gt;outtabsbuf[i])&quot;}{&quot;jas_iccputuint(out, 2, lut16-&gt;outtabsbuf[i])&quot;}}</description>
<line>1541</line>
</event>
<event>
<tag>unchecked_value</tag>
<description>{CovLStr{v1}{No check of the return value of {0}.}{&quot;jas_iccputuint(out, 2, time-&gt;year)&quot;}}</description>
<line>650</line>
</event>
<extra>jas_iccputuint</extra>
<subcategory>none</subcategory>
</error>
<error>
<checker>CHECKED_RETURN</checker>
<template>checked_return_multievent_v1</template>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_icc.c</file>
<function>jas_iccputtime</function>
<score>100</score>
<ordered>true</ordered>
<event>
<main>true</main>
<tag>check_return</tag>
<description>{CovLStr{v1}{Calling function {0} without checking return value (as is done elsewhere {1} out of {2} times).}{&quot;jas_iccputuint(jas_stream_t *, int, unsigned long long)&quot;}{18}{28}}</description>
<line>651</line>
</event>
<event>
<event_set>1</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_iccputuint(out, 4, curv-&gt;numents)&quot;}{&quot;jas_iccputuint(out, 4, curv-&gt;numents)&quot;}}</description>
<line>1029</line>
</event>
<event>
<event_set>2</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_iccputuint(out, 2, curv-&gt;ents[i])&quot;}{&quot;jas_iccputuint(out, 2, curv-&gt;ents[i])&quot;}}</description>
<line>1032</line>
</event>
<event>
<event_set>3</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_iccputuint(out, 2, lut16-&gt;numintabents)&quot;}{&quot;jas_iccputuint(out, 2, lut16-&gt;numintabents)&quot;}}</description>
<line>1531</line>
</event>
<event>
<event_set>4</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_iccputuint(out, 2, lut16-&gt;intabsbuf[i])&quot;}{&quot;jas_iccputuint(out, 2, lut16-&gt;intabsbuf[i])&quot;}}</description>
<line>1536</line>
</event>
<event>
<event_set>5</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_iccputuint(out, 2, lut16-&gt;outtabsbuf[i])&quot;}{&quot;jas_iccputuint(out, 2, lut16-&gt;outtabsbuf[i])&quot;}}</description>
<line>1541</line>
</event>
<event>
<tag>unchecked_value</tag>
<description>{CovLStr{v1}{No check of the return value of {0}.}{&quot;jas_iccputuint(out, 2, time-&gt;month)&quot;}}</description>
<line>651</line>
</event>
<extra>jas_iccputuint</extra>
<subcategory>none</subcategory>
</error>
<error>
<checker>CHECKED_RETURN</checker>
<template>checked_return_multievent_v1</template>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_icc.c</file>
<function>jas_iccputtime</function>
<score>100</score>
<ordered>true</ordered>
<event>
<main>true</main>
<tag>check_return</tag>
<description>{CovLStr{v1}{Calling function {0} without checking return value (as is done elsewhere {1} out of {2} times).}{&quot;jas_iccputuint(jas_stream_t *, int, unsigned long long)&quot;}{18}{28}}</description>
<line>652</line>
</event>
<event>
<event_set>1</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_iccputuint(out, 4, curv-&gt;numents)&quot;}{&quot;jas_iccputuint(out, 4, curv-&gt;numents)&quot;}}</description>
<line>1029</line>
</event>
<event>
<event_set>2</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_iccputuint(out, 2, curv-&gt;ents[i])&quot;}{&quot;jas_iccputuint(out, 2, curv-&gt;ents[i])&quot;}}</description>
<line>1032</line>
</event>
<event>
<event_set>3</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_iccputuint(out, 2, lut16-&gt;numintabents)&quot;}{&quot;jas_iccputuint(out, 2, lut16-&gt;numintabents)&quot;}}</description>
<line>1531</line>
</event>
<event>
<event_set>4</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_iccputuint(out, 2, lut16-&gt;intabsbuf[i])&quot;}{&quot;jas_iccputuint(out, 2, lut16-&gt;intabsbuf[i])&quot;}}</description>
<line>1536</line>
</event>
<event>
<event_set>5</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_iccputuint(out, 2, lut16-&gt;outtabsbuf[i])&quot;}{&quot;jas_iccputuint(out, 2, lut16-&gt;outtabsbuf[i])&quot;}}</description>
<line>1541</line>
</event>
<event>
<tag>unchecked_value</tag>
<description>{CovLStr{v1}{No check of the return value of {0}.}{&quot;jas_iccputuint(out, 2, time-&gt;day)&quot;}}</description>
<line>652</line>
</event>
<extra>jas_iccputuint</extra>
<subcategory>none</subcategory>
</error>
<error>
<checker>CHECKED_RETURN</checker>
<template>checked_return_multievent_v1</template>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_icc.c</file>
<function>jas_iccputtime</function>
<score>100</score>
<ordered>true</ordered>
<event>
<main>true</main>
<tag>check_return</tag>
<description>{CovLStr{v1}{Calling function {0} without checking return value (as is done elsewhere {1} out of {2} times).}{&quot;jas_iccputuint(jas_stream_t *, int, unsigned long long)&quot;}{18}{28}}</description>
<line>653</line>
</event>
<event>
<event_set>1</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_iccputuint(out, 4, curv-&gt;numents)&quot;}{&quot;jas_iccputuint(out, 4, curv-&gt;numents)&quot;}}</description>
<line>1029</line>
</event>
<event>
<event_set>2</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_iccputuint(out, 2, curv-&gt;ents[i])&quot;}{&quot;jas_iccputuint(out, 2, curv-&gt;ents[i])&quot;}}</description>
<line>1032</line>
</event>
<event>
<event_set>3</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_iccputuint(out, 2, lut16-&gt;numintabents)&quot;}{&quot;jas_iccputuint(out, 2, lut16-&gt;numintabents)&quot;}}</description>
<line>1531</line>
</event>
<event>
<event_set>4</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_iccputuint(out, 2, lut16-&gt;intabsbuf[i])&quot;}{&quot;jas_iccputuint(out, 2, lut16-&gt;intabsbuf[i])&quot;}}</description>
<line>1536</line>
</event>
<event>
<event_set>5</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_iccputuint(out, 2, lut16-&gt;outtabsbuf[i])&quot;}{&quot;jas_iccputuint(out, 2, lut16-&gt;outtabsbuf[i])&quot;}}</description>
<line>1541</line>
</event>
<event>
<tag>unchecked_value</tag>
<description>{CovLStr{v1}{No check of the return value of {0}.}{&quot;jas_iccputuint(out, 2, time-&gt;hour)&quot;}}</description>
<line>653</line>
</event>
<extra>jas_iccputuint</extra>
<subcategory>none</subcategory>
</error>
<error>
<checker>CHECKED_RETURN</checker>
<template>checked_return_multievent_v1</template>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_icc.c</file>
<function>jas_iccputtime</function>
<score>100</score>
<ordered>true</ordered>
<event>
<main>true</main>
<tag>check_return</tag>
<description>{CovLStr{v1}{Calling function {0} without checking return value (as is done elsewhere {1} out of {2} times).}{&quot;jas_iccputuint(jas_stream_t *, int, unsigned long long)&quot;}{18}{28}}</description>
<line>654</line>
</event>
<event>
<event_set>1</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_iccputuint(out, 4, curv-&gt;numents)&quot;}{&quot;jas_iccputuint(out, 4, curv-&gt;numents)&quot;}}</description>
<line>1029</line>
</event>
<event>
<event_set>2</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_iccputuint(out, 2, curv-&gt;ents[i])&quot;}{&quot;jas_iccputuint(out, 2, curv-&gt;ents[i])&quot;}}</description>
<line>1032</line>
</event>
<event>
<event_set>3</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_iccputuint(out, 2, lut16-&gt;numintabents)&quot;}{&quot;jas_iccputuint(out, 2, lut16-&gt;numintabents)&quot;}}</description>
<line>1531</line>
</event>
<event>
<event_set>4</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_iccputuint(out, 2, lut16-&gt;intabsbuf[i])&quot;}{&quot;jas_iccputuint(out, 2, lut16-&gt;intabsbuf[i])&quot;}}</description>
<line>1536</line>
</event>
<event>
<event_set>5</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_iccputuint(out, 2, lut16-&gt;outtabsbuf[i])&quot;}{&quot;jas_iccputuint(out, 2, lut16-&gt;outtabsbuf[i])&quot;}}</description>
<line>1541</line>
</event>
<event>
<tag>unchecked_value</tag>
<description>{CovLStr{v1}{No check of the return value of {0}.}{&quot;jas_iccputuint(out, 2, time-&gt;min)&quot;}}</description>
<line>654</line>
</event>
<extra>jas_iccputuint</extra>
<subcategory>none</subcategory>
</error>
<error>
<checker>CHECKED_RETURN</checker>
<template>checked_return_multievent_v1</template>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_icc.c</file>
<function>jas_iccputtime</function>
<score>100</score>
<ordered>true</ordered>
<event>
<main>true</main>
<tag>check_return</tag>
<description>{CovLStr{v1}{Calling function {0} without checking return value (as is done elsewhere {1} out of {2} times).}{&quot;jas_iccputuint(jas_stream_t *, int, unsigned long long)&quot;}{18}{28}}</description>
<line>655</line>
</event>
<event>
<event_set>1</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_iccputuint(out, 4, curv-&gt;numents)&quot;}{&quot;jas_iccputuint(out, 4, curv-&gt;numents)&quot;}}</description>
<line>1029</line>
</event>
<event>
<event_set>2</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_iccputuint(out, 2, curv-&gt;ents[i])&quot;}{&quot;jas_iccputuint(out, 2, curv-&gt;ents[i])&quot;}}</description>
<line>1032</line>
</event>
<event>
<event_set>3</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_iccputuint(out, 2, lut16-&gt;numintabents)&quot;}{&quot;jas_iccputuint(out, 2, lut16-&gt;numintabents)&quot;}}</description>
<line>1531</line>
</event>
<event>
<event_set>4</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_iccputuint(out, 2, lut16-&gt;intabsbuf[i])&quot;}{&quot;jas_iccputuint(out, 2, lut16-&gt;intabsbuf[i])&quot;}}</description>
<line>1536</line>
</event>
<event>
<event_set>5</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_iccputuint(out, 2, lut16-&gt;outtabsbuf[i])&quot;}{&quot;jas_iccputuint(out, 2, lut16-&gt;outtabsbuf[i])&quot;}}</description>
<line>1541</line>
</event>
<event>
<tag>unchecked_value</tag>
<description>{CovLStr{v1}{No check of the return value of {0}.}{&quot;jas_iccputuint(out, 2, time-&gt;sec)&quot;}}</description>
<line>655</line>
</event>
<extra>jas_iccputuint</extra>
<subcategory>none</subcategory>
</error>
<error>
<checker>CHECKED_RETURN</checker>
<template>checked_return_multievent_v1</template>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/jpc/jpc_enc.c</file>
<function>jpc_enc_encodemainbody</function>
<score>100</score>
<ordered>true</ordered>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;tileno &lt; (int)cp-&gt;numtiles&quot;}}</description>
<line>1140</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;!(enc-&gt;curtile = jpc_enc_tile_create(enc-&gt;cp, enc-&gt;image, tileno))&quot;}}</description>
<line>1144</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>1146</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;jas_getdbglevel() &gt;= 10&quot;}}</description>
<line>1150</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;cmptno &lt; tile-&gt;numtcmpts&quot;}}</description>
<line>1155</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!(cp-&gt;ccps + cmptno).sgnd&quot;}}</description>
<line>1156</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;i &lt; comp-&gt;data-&gt;numrows_&quot;}}</description>
<line>1158</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;j &lt; comp-&gt;data-&gt;numcols_&quot;}}</description>
<line>1159</line>
<path_event></path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>1161</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>1159</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;j &lt; comp-&gt;data-&gt;numcols_&quot;}}</description>
<line>1159</line>
<path_event></path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>1161</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>1159</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;j &lt; comp-&gt;data-&gt;numcols_&quot;}}</description>
<line>1159</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>1161</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>1162</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>1158</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;i &lt; comp-&gt;data-&gt;numrows_&quot;}}</description>
<line>1158</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;j &lt; comp-&gt;data-&gt;numcols_&quot;}}</description>
<line>1159</line>
<path_event></path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>1161</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>1159</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;j &lt; comp-&gt;data-&gt;numcols_&quot;}}</description>
<line>1159</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>1161</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>1162</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>1158</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;i &lt; comp-&gt;data-&gt;numrows_&quot;}}</description>
<line>1158</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>1162</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>1164</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>1155</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;cmptno &lt; tile-&gt;numtcmpts&quot;}}</description>
<line>1155</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!(cp-&gt;ccps + cmptno).sgnd&quot;}}</description>
<line>1156</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;i &lt; comp-&gt;data-&gt;numrows_&quot;}}</description>
<line>1158</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;j &lt; comp-&gt;data-&gt;numcols_&quot;}}</description>
<line>1159</line>
<path_event></path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>1161</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>1159</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;j &lt; comp-&gt;data-&gt;numcols_&quot;}}</description>
<line>1159</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>1161</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>1162</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>1158</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;i &lt; comp-&gt;data-&gt;numrows_&quot;}}</description>
<line>1158</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>1162</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>1164</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>1155</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;cmptno &lt; tile-&gt;numtcmpts&quot;}}</description>
<line>1155</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>1164</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!tile-&gt;intmode&quot;}}</description>
<line>1166</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;comp != endcomps&quot;}}</description>
<line>1168</line>
<path_event></path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>1170</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>1168</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;comp != endcomps&quot;}}</description>
<line>1168</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>1170</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>switch</tag>
<description>{CovLStr{v1}{Switch case value {0}}{&quot;2&quot;}}</description>
<line>1173</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>switch_case</tag>
<description>{CovLStr{v1}{Reached case {0}}{&quot;2&quot;}}</description>
<line>1174</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;enc-&gt;image-&gt;numcmpts_ == 3&quot;}}</description>
<line>1175</line>
<path_event></path_event>
</event>
<event>
<tag>break</tag>
<description>{CovLStr{v1}{Breaking from switch}}</description>
<line>1178</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>switch_end</tag>
<description>{CovLStr{v1}{Reached end of switch}}</description>
<line>1186</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;i &lt; enc-&gt;image-&gt;numcmpts_&quot;}}</description>
<line>1188</line>
<path_event></path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>1192</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>1188</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;i &lt; enc-&gt;image-&gt;numcmpts_&quot;}}</description>
<line>1188</line>
<path_event></path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>1192</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>1188</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;i &lt; enc-&gt;image-&gt;numcmpts_&quot;}}</description>
<line>1188</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>1192</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;comp != endcomps&quot;}}</description>
<line>1196</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;rlvlno &lt; comp-&gt;numrlvls&quot;}}</description>
<line>1204</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!lvl-&gt;bands&quot;}}</description>
<line>1205</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;rlvlno&quot;}}</description>
<line>1206</line>
<path_event></path_event>
</event>
<event>
<tag>continue</tag>
<description>{CovLStr{v1}{Continuing loop}}</description>
<line>1207</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Looping back}}</description>
<line>1258</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;rlvlno &lt; comp-&gt;numrlvls&quot;}}</description>
<line>1204</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!lvl-&gt;bands&quot;}}</description>
<line>1205</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;rlvlno&quot;}}</description>
<line>1206</line>
<path_event></path_event>
</event>
<event>
<tag>continue</tag>
<description>{CovLStr{v1}{Continuing loop}}</description>
<line>1207</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Looping back}}</description>
<line>1258</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;rlvlno &lt; comp-&gt;numrlvls&quot;}}</description>
<line>1204</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;!lvl-&gt;bands&quot;}}</description>
<line>1205</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>1208</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;band != endbands&quot;}}</description>
<line>1210</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!band-&gt;data&quot;}}</description>
<line>1211</line>
<path_event></path_event>
</event>
<event>
<tag>continue</tag>
<description>{CovLStr{v1}{Continuing loop}}</description>
<line>1213</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Looping back}}</description>
<line>1257</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;band != endbands&quot;}}</description>
<line>1210</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;!band-&gt;data&quot;}}</description>
<line>1211</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>1214</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;y &lt; (uint_fast32_t)band-&gt;data-&gt;numrows_&quot;}}</description>
<line>1217</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;x &lt; (uint_fast32_t)band-&gt;data-&gt;numcols_&quot;}}</description>
<line>1218</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;mag &gt; mxmag&quot;}}</description>
<line>1220</line>
<path_event></path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>1223</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>1218</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;x &lt; (uint_fast32_t)band-&gt;data-&gt;numcols_&quot;}}</description>
<line>1218</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;mag &gt; mxmag&quot;}}</description>
<line>1220</line>
<path_event></path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>1223</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>1218</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;x &lt; (uint_fast32_t)band-&gt;data-&gt;numcols_&quot;}}</description>
<line>1218</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>1223</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>1224</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>1217</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;y &lt; (uint_fast32_t)band-&gt;data-&gt;numrows_&quot;}}</description>
<line>1217</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;x &lt; (uint_fast32_t)band-&gt;data-&gt;numcols_&quot;}}</description>
<line>1218</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;mag &gt; mxmag&quot;}}</description>
<line>1220</line>
<path_event></path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>1223</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>1218</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;x &lt; (uint_fast32_t)band-&gt;data-&gt;numcols_&quot;}}</description>
<line>1218</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>1223</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>1224</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>1217</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;y &lt; (uint_fast32_t)band-&gt;data-&gt;numrows_&quot;}}</description>
<line>1217</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>1224</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;tile-&gt;intmode&quot;}}</description>
<line>1225</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>else_branch</tag>
<description>{CovLStr{v1}{Reached else branch}}</description>
<line>1227</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;numgbits &gt; mingbits&quot;}}</description>
<line>1235</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!tile-&gt;intmode&quot;}}</description>
<line>1238</line>
<path_event></path_event>
</event>
<event>
<tag>if_fallthrough</tag>
<description>{CovLStr{v1}{Falling through to end of if statement}}</description>
<line>1242</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>1244</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!tile-&gt;intmode&quot;}}</description>
<line>1251</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;band-&gt;data&quot;}}</description>
<line>1251</line>
<path_event></path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>1257</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>1210</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;band != endbands&quot;}}</description>
<line>1210</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;!band-&gt;data&quot;}}</description>
<line>1211</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>1214</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;y &lt; (uint_fast32_t)band-&gt;data-&gt;numrows_&quot;}}</description>
<line>1217</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;x &lt; (uint_fast32_t)band-&gt;data-&gt;numcols_&quot;}}</description>
<line>1218</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;mag &gt; mxmag&quot;}}</description>
<line>1220</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>1222</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>1223</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>1218</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;x &lt; (uint_fast32_t)band-&gt;data-&gt;numcols_&quot;}}</description>
<line>1218</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>1223</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>1224</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>1217</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;y &lt; (uint_fast32_t)band-&gt;data-&gt;numrows_&quot;}}</description>
<line>1217</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>1224</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;tile-&gt;intmode&quot;}}</description>
<line>1225</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>else_branch</tag>
<description>{CovLStr{v1}{Reached else branch}}</description>
<line>1227</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;numgbits &gt; mingbits&quot;}}</description>
<line>1235</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!tile-&gt;intmode&quot;}}</description>
<line>1238</line>
<path_event></path_event>
</event>
<event>
<tag>if_fallthrough</tag>
<description>{CovLStr{v1}{Falling through to end of if statement}}</description>
<line>1242</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>1244</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!tile-&gt;intmode&quot;}}</description>
<line>1251</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;band-&gt;data&quot;}}</description>
<line>1251</line>
<path_event></path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>1257</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>1210</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;band != endbands&quot;}}</description>
<line>1210</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>1257</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>1258</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>1204</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;rlvlno &lt; comp-&gt;numrlvls&quot;}}</description>
<line>1204</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;!lvl-&gt;bands&quot;}}</description>
<line>1205</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>1208</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;band != endbands&quot;}}</description>
<line>1210</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;!band-&gt;data&quot;}}</description>
<line>1211</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>1214</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;y &lt; (uint_fast32_t)band-&gt;data-&gt;numrows_&quot;}}</description>
<line>1217</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;x &lt; (uint_fast32_t)band-&gt;data-&gt;numcols_&quot;}}</description>
<line>1218</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;mag &gt; mxmag&quot;}}</description>
<line>1220</line>
<path_event></path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>1223</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>1218</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;x &lt; (uint_fast32_t)band-&gt;data-&gt;numcols_&quot;}}</description>
<line>1218</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>1223</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>1224</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>1217</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;y &lt; (uint_fast32_t)band-&gt;data-&gt;numrows_&quot;}}</description>
<line>1217</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>1224</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;tile-&gt;intmode&quot;}}</description>
<line>1225</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>else_branch</tag>
<description>{CovLStr{v1}{Reached else branch}}</description>
<line>1227</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;numgbits &gt; mingbits&quot;}}</description>
<line>1235</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!tile-&gt;intmode&quot;}}</description>
<line>1238</line>
<path_event></path_event>
</event>
<event>
<tag>if_fallthrough</tag>
<description>{CovLStr{v1}{Falling through to end of if statement}}</description>
<line>1242</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>1244</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!tile-&gt;intmode&quot;}}</description>
<line>1251</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;band-&gt;data&quot;}}</description>
<line>1251</line>
<path_event></path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>1257</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>1210</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;band != endbands&quot;}}</description>
<line>1210</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>1257</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>1258</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>1204</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;rlvlno &lt; comp-&gt;numrlvls&quot;}}</description>
<line>1204</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>1258</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;1&quot;}}</description>
<line>1260</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!tile-&gt;intmode&quot;}}</description>
<line>1261</line>
<path_event></path_event>
</event>
<event>
<tag>if_fallthrough</tag>
<description>{CovLStr{v1}{Falling through to end of if statement}}</description>
<line>1263</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>1265</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;mingbits &gt; cp-&gt;tccp.numgbits&quot;}}</description>
<line>1270</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>1274</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>1275</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>1196</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;comp != endcomps&quot;}}</description>
<line>1196</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;rlvlno &lt; comp-&gt;numrlvls&quot;}}</description>
<line>1204</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!lvl-&gt;bands&quot;}}</description>
<line>1205</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;rlvlno&quot;}}</description>
<line>1206</line>
<path_event></path_event>
</event>
<event>
<tag>continue</tag>
<description>{CovLStr{v1}{Continuing loop}}</description>
<line>1207</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Looping back}}</description>
<line>1258</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;rlvlno &lt; comp-&gt;numrlvls&quot;}}</description>
<line>1204</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;!lvl-&gt;bands&quot;}}</description>
<line>1205</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>1208</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;band != endbands&quot;}}</description>
<line>1210</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!band-&gt;data&quot;}}</description>
<line>1211</line>
<path_event></path_event>
</event>
<event>
<tag>continue</tag>
<description>{CovLStr{v1}{Continuing loop}}</description>
<line>1213</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Looping back}}</description>
<line>1257</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;band != endbands&quot;}}</description>
<line>1210</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>1257</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>1258</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>1204</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;rlvlno &lt; comp-&gt;numrlvls&quot;}}</description>
<line>1204</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>1258</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;1&quot;}}</description>
<line>1260</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!tile-&gt;intmode&quot;}}</description>
<line>1261</line>
<path_event></path_event>
</event>
<event>
<tag>if_fallthrough</tag>
<description>{CovLStr{v1}{Falling through to end of if statement}}</description>
<line>1263</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>1265</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;mingbits &gt; cp-&gt;tccp.numgbits&quot;}}</description>
<line>1270</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>1274</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>1275</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>1196</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;comp != endcomps&quot;}}</description>
<line>1196</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>1275</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;!(enc-&gt;tmpstream = jas_stream_memopen(NULL, 0))&quot;}}</description>
<line>1277</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>1280</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;!(enc-&gt;mrk = jpc_ms_create(65424))&quot;}}</description>
<line>1283</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>1285</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;jpc_putms(enc-&gt;tmpstream, enc-&gt;cstate, enc-&gt;mrk)&quot;}}</description>
<line>1291</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>1294</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;cmptno &lt; (int)cp-&gt;numcmpts&quot;}}</description>
<line>1303</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;comp-&gt;numrlvls != tccp-&gt;maxrlvls&quot;}}</description>
<line>1305</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;!(enc-&gt;mrk = jpc_ms_create(65362))&quot;}}</description>
<line>1306</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>1308</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;tile-&gt;mctid != 0&quot;}}</description>
<line>1321</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;i &lt; comp-&gt;numrlvls&quot;}}</description>
<line>1322</line>
<path_event></path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>1325</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>1322</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;i &lt; comp-&gt;numrlvls&quot;}}</description>
<line>1322</line>
<path_event></path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>1325</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>1322</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;i &lt; comp-&gt;numrlvls&quot;}}</description>
<line>1322</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>1325</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;jpc_putms(enc-&gt;tmpstream, enc-&gt;cstate, enc-&gt;mrk)&quot;}}</description>
<line>1326</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>1328</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>1332</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>1303</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;cmptno &lt; (int)cp-&gt;numcmpts&quot;}}</description>
<line>1303</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;comp-&gt;numrlvls != tccp-&gt;maxrlvls&quot;}}</description>
<line>1305</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;!(enc-&gt;mrk = jpc_ms_create(65362))&quot;}}</description>
<line>1306</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>1308</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;tile-&gt;mctid != 0&quot;}}</description>
<line>1321</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;i &lt; comp-&gt;numrlvls&quot;}}</description>
<line>1322</line>
<path_event></path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>1325</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>1322</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;i &lt; comp-&gt;numrlvls&quot;}}</description>
<line>1322</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>1325</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;jpc_putms(enc-&gt;tmpstream, enc-&gt;cstate, enc-&gt;mrk)&quot;}}</description>
<line>1326</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>1328</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>1332</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>1303</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;cmptno &lt; (int)cp-&gt;numcmpts&quot;}}</description>
<line>1303</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;comp-&gt;numrlvls != tccp-&gt;maxrlvls&quot;}}</description>
<line>1305</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>1331</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>1332</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>1303</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;cmptno &lt; (int)cp-&gt;numcmpts&quot;}}</description>
<line>1303</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>1332</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;cmptno &lt; (int)cp-&gt;numcmpts&quot;}}</description>
<line>1334</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;(int)ccps-&gt;numstepsizes == comp-&gt;numstepsizes&quot;}}</description>
<line>1336</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;bandno &lt; (int)ccps-&gt;numstepsizes&quot;}}</description>
<line>1338</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;ccps-&gt;stepsizes[bandno] != comp-&gt;stepsizes[bandno]&quot;}}</description>
<line>1339</line>
<path_event></path_event>
</event>
<event>
<tag>break</tag>
<description>{CovLStr{v1}{Breaking from loop}}</description>
<line>1341</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>1343</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_fallthrough</tag>
<description>{CovLStr{v1}{Falling through to end of if statement}}</description>
<line>1344</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>1346</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!samestepsizes&quot;}}</description>
<line>1347</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;!(enc-&gt;mrk = jpc_ms_create(65373))&quot;}}</description>
<line>1348</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>1350</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;comp-&gt;qmfbid == 0&quot;}}</description>
<line>1354</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;jpc_putms(enc-&gt;tmpstream, enc-&gt;cstate, enc-&gt;mrk)&quot;}}</description>
<line>1358</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>1360</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>1365</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>1334</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;cmptno &lt; (int)cp-&gt;numcmpts&quot;}}</description>
<line>1334</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;(int)ccps-&gt;numstepsizes == comp-&gt;numstepsizes&quot;}}</description>
<line>1336</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;bandno &lt; (int)ccps-&gt;numstepsizes&quot;}}</description>
<line>1338</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;ccps-&gt;stepsizes[bandno] != comp-&gt;stepsizes[bandno]&quot;}}</description>
<line>1339</line>
<path_event></path_event>
</event>
<event>
<tag>break</tag>
<description>{CovLStr{v1}{Breaking from loop}}</description>
<line>1341</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>1343</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_fallthrough</tag>
<description>{CovLStr{v1}{Falling through to end of if statement}}</description>
<line>1344</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>1346</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!samestepsizes&quot;}}</description>
<line>1347</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;!(enc-&gt;mrk = jpc_ms_create(65373))&quot;}}</description>
<line>1348</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>1350</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;comp-&gt;qmfbid == 0&quot;}}</description>
<line>1354</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;jpc_putms(enc-&gt;tmpstream, enc-&gt;cstate, enc-&gt;mrk)&quot;}}</description>
<line>1358</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>1360</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>1365</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>1334</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;cmptno &lt; (int)cp-&gt;numcmpts&quot;}}</description>
<line>1334</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;(int)ccps-&gt;numstepsizes == comp-&gt;numstepsizes&quot;}}</description>
<line>1336</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;bandno &lt; (int)ccps-&gt;numstepsizes&quot;}}</description>
<line>1338</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;ccps-&gt;stepsizes[bandno] != comp-&gt;stepsizes[bandno]&quot;}}</description>
<line>1339</line>
<path_event></path_event>
</event>
<event>
<tag>break</tag>
<description>{CovLStr{v1}{Breaking from loop}}</description>
<line>1341</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>1343</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_fallthrough</tag>
<description>{CovLStr{v1}{Falling through to end of if statement}}</description>
<line>1344</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>1346</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!samestepsizes&quot;}}</description>
<line>1347</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;!(enc-&gt;mrk = jpc_ms_create(65373))&quot;}}</description>
<line>1348</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>1350</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;comp-&gt;qmfbid == 0&quot;}}</description>
<line>1354</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;jpc_putms(enc-&gt;tmpstream, enc-&gt;cstate, enc-&gt;mrk)&quot;}}</description>
<line>1358</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>1360</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>1365</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>1334</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;cmptno &lt; (int)cp-&gt;numcmpts&quot;}}</description>
<line>1334</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>1365</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;!(enc-&gt;mrk = jpc_ms_create(65427))&quot;}}</description>
<line>1368</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>1370</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;jpc_putms(enc-&gt;tmpstream, enc-&gt;cstate, enc-&gt;mrk)&quot;}}</description>
<line>1371</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>1374</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;jpc_enc_enccblks(enc)&quot;}}</description>
<line>1383</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>1386</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;lyrno &lt; tile-&gt;numlyrs - 1&quot;}}</description>
<line>1394</line>
<path_event></path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>1397</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>1394</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;lyrno &lt; tile-&gt;numlyrs - 1&quot;}}</description>
<line>1394</line>
<path_event></path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>1397</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>1394</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;lyrno &lt; tile-&gt;numlyrs - 1&quot;}}</description>
<line>1394</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>1397</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;cp-&gt;totalsize != 4294967295U&quot;}}</description>
<line>1398</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;lyrno &lt; tile-&gt;numlyrs&quot;}}</description>
<line>1400</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;tile-&gt;lyrsizes[lyrno] != 4294967295U&quot;}}</description>
<line>1401</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;tilehdrlen &lt;= (long)tile-&gt;lyrsizes[lyrno]&quot;}}</description>
<line>1402</line>
<path_event></path_event>
</event>
<event>
<tag>if_fallthrough</tag>
<description>{CovLStr{v1}{Falling through to end of if statement}}</description>
<line>1404</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>1406</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>1408</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>1400</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;lyrno &lt; tile-&gt;numlyrs&quot;}}</description>
<line>1400</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;tile-&gt;lyrsizes[lyrno] != 4294967295U&quot;}}</description>
<line>1401</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;tilehdrlen &lt;= (long)tile-&gt;lyrsizes[lyrno]&quot;}}</description>
<line>1402</line>
<path_event></path_event>
</event>
<event>
<tag>if_fallthrough</tag>
<description>{CovLStr{v1}{Falling through to end of if statement}}</description>
<line>1404</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>1406</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>1408</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>1400</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;lyrno &lt; tile-&gt;numlyrs&quot;}}</description>
<line>1400</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>1408</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;rateallocate(enc, tile-&gt;numlyrs, tile-&gt;lyrsizes)&quot;}}</description>
<line>1410</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>1412</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;jpc_enc_encodetiledata(enc)&quot;}}</description>
<line>1417</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>1420</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;jas_stream_seek(enc-&gt;tmpstream, 6L, 0) &lt; 0L&quot;}}</description>
<line>1432</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>1434</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<main>true</main>
<tag>check_return</tag>
<description>{CovLStr{v1}{Calling function {0} without checking return value (as is done elsewhere {1} out of {2} times).}{&quot;jpc_putuint32(jas_stream_t *, uint_fast32_t)&quot;}{2}{3}}</description>
<line>1435</line>
</event>
<event>
<event_set>1</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_putuint32(out, siz-&gt;width)&quot;}{&quot;jpc_putuint32(out, siz-&gt;width)&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/jpc/jpc_cs.c</file>
<line>535</line>
</event>
<event>
<event_set>2</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_putuint32(out, sot-&gt;len)&quot;}{&quot;jpc_putuint32(out, sot-&gt;len)&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/jpc/jpc_cs.c</file>
<line>450</line>
</event>
<event>
<tag>unchecked_value</tag>
<description>{CovLStr{v1}{No check of the return value of {0}.}{&quot;jpc_putuint32(enc-&gt;tmpstream, tilelen)&quot;}}</description>
<line>1435</line>
</event>
<extra>jpc_putuint32</extra>
<subcategory>none</subcategory>
</error>
<error>
<checker>CHECKED_RETURN</checker>
<template>checked_return_multievent_v1</template>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/ras/ras_enc.c</file>
<function>ras_putdatastd</function>
<score>100</score>
<ordered>true</ordered>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;i &lt; numcmpts&quot;}}</description>
<line>233</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;data[i]&quot;}}</description>
<line>235</line>
<path_event></path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>236</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>233</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;i &lt; numcmpts&quot;}}</description>
<line>233</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;data[i]&quot;}}</description>
<line>235</line>
<path_event></path_event>
</event>
<event>
<tag>loop</tag>
<description>{CovLStr{v1}{Jumping back to the beginning of the loop}}</description>
<line>236</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>loop_begin</tag>
<description>{CovLStr{v1}{Jumped back to beginning of loop}}</description>
<line>233</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;i &lt; numcmpts&quot;}}</description>
<line>233</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>loop_end</tag>
<description>{CovLStr{v1}{Reached end of loop}}</description>
<line>236</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;y &lt; hdr-&gt;height&quot;}}</description>
<line>243</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;i &lt; numcmpts&quot;}}</description>
<line>244</line>
<path_event></path_event>
</event>
<event>
<main>true</main>
<tag>check_return</tag>
<description>{CovLStr{v1}{Calling function {0} without checking return value (as is done elsewhere {1} out of {2} times).}{&quot;jas_image_readcmpt(jas_image_t *, int, jas_image_coord_t, jas_image_coord_t, jas_image_coord_t, jas_image_coord_t, jas_matrix_t *)&quot;}{8}{9}}</description>
<line>245</line>
</event>
<event>
<event_set>1</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_image_readcmpt(origimage, compno, 0, 0, width, height, origdata)&quot;}{&quot;jas_image_readcmpt(origimage, compno, 0, 0, width, height, origdata)&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/appl/imgcmp.c</file>
<line>311</line>
</event>
<event>
<event_set>2</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_image_readcmpt(reconimage, compno, 0, 0, width, height, recondata)&quot;}{&quot;jas_image_readcmpt(reconimage, compno, 0, 0, width, height, recondata)&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/appl/imgcmp.c</file>
<line>316</line>
</event>
<event>
<event_set>3</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_image_readcmpt(image, cmptno, 0, i, info-&gt;width, 1, bufs[cmpts[cmptno]])&quot;}{&quot;jas_image_readcmpt(image, cmptno, 0, i, info-&gt;width, 1, bufs[cmpts[cmptno]])&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/bmp/bmp_enc.c</file>
<line>318</line>
</event>
<event>
<event_set>4</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_image_readcmpt(image, cmptno, tlx - cmpttlx, tly - cmpttly, brx - tlx, bry - tly, tcmpt-&gt;data)&quot;}{&quot;jas_image_readcmpt(image, cmptno, tlx - cmpttlx, tly - cmpttly, brx - tlx, bry - tly, tcmpt-&gt;data)&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/jpc/jpc_enc.c</file>
<line>2081</line>
</event>
<event>
<event_set>5</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_image_readcmpt(tmpimage, 0, 0, 0, cmpt-&gt;width, cmpt-&gt;height, data)&quot;}{&quot;jas_image_readcmpt(tmpimage, 0, 0, 0, cmpt-&gt;width, cmpt-&gt;height, data)&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/mif/mif_cod.c</file>
<line>213</line>
</event>
<event>
<tag>unchecked_value</tag>
<description>{CovLStr{v1}{No check of the return value of {0}.}{&quot;jas_image_readcmpt(image, cmpts[i], 0, y, image-&gt;brx_ - image-&gt;tlx_, 1, data[i])&quot;}}</description>
<line>245</line>
</event>
<extra>jas_image_readcmpt</extra>
<subcategory>none</subcategory>
</error>
<error>
<checker>CHECKED_RETURN</checker>
<template>checked_return_multievent_v1</template>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_stream.c</file>
<function>jas_stream_printf</function>
<score>100</score>
<ordered>true</ordered>
<event>
<main>true</main>
<tag>check_return</tag>
<description>{CovLStr{v1}{Calling function {0} without checking return value (as is done elsewhere {1} out of {2} times).}{&quot;jas_stream_puts(jas_stream_t *, char const *)&quot;}{2}{3}}</description>
<line>557</line>
</event>
<event>
<event_set>1</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_stream_puts(out, txt-&gt;string)&quot;}{&quot;jas_stream_puts(out, txt-&gt;string)&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_icc.c</file>
<line>1225</line>
</event>
<event>
<event_set>2</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_stream_puts(out, txtdesc-&gt;ascdata)&quot;}{&quot;jas_stream_puts(out, txtdesc-&gt;ascdata)&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_icc.c</file>
<line>1145</line>
</event>
<event>
<tag>unchecked_value</tag>
<description>{CovLStr{v1}{No check of the return value of {0}.}{&quot;jas_stream_puts(stream, buf)&quot;}}</description>
<line>557</line>
</event>
<extra>jas_stream_puts</extra>
<subcategory>none</subcategory>
</error>
<error>
<checker>CHECKED_RETURN</checker>
<template>checked_return_multievent_v1</template>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/jpc/jpc_cs.c</file>
<function>jpc_qcx_putcompparms</function>
<score>100</score>
<ordered>true</ordered>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;i &lt; compparms-&gt;numstepsizes&quot;}}</description>
<line>1016</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;compparms-&gt;qntsty == 0&quot;}}</description>
<line>1017</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>else_branch</tag>
<description>{CovLStr{v1}{Reached else branch}}</description>
<line>1020</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<main>true</main>
<tag>check_return</tag>
<description>{CovLStr{v1}{Calling function {0} without checking return value (as is done elsewhere {1} out of {2} times).}{&quot;jpc_putuint16(jas_stream_t *, uint_fast16_t)&quot;}{11}{13}}</description>
<line>1021</line>
</event>
<event>
<event_set>1</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_putuint16(out, ms-&gt;id)&quot;}{&quot;jpc_putuint16(out, ms-&gt;id)&quot;}}</description>
<line>326</line>
</event>
<event>
<event_set>2</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_putuint16(out, ms-&gt;len + 2U)&quot;}{&quot;jpc_putuint16(out, ms-&gt;len + 2U)&quot;}}</description>
<line>349</line>
</event>
<event>
<event_set>3</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_putuint16(out, coc-&gt;compno)&quot;}{&quot;jpc_putuint16(out, coc-&gt;compno)&quot;}}</description>
<line>695</line>
</event>
<event>
<event_set>4</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_putuint16(out, cod-&gt;numlyrs)&quot;}{&quot;jpc_putuint16(out, cod-&gt;numlyrs)&quot;}}</description>
<line>614</line>
</event>
<event>
<event_set>5</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_putuint16(out, com-&gt;regid)&quot;}{&quot;jpc_putuint16(out, com-&gt;regid)&quot;}}</description>
<line>1420</line>
</event>
<event>
<tag>unchecked_value</tag>
<description>{CovLStr{v1}{No check of the return value of {0}.}{&quot;jpc_putuint16(out, compparms-&gt;stepsizes[i])&quot;}}</description>
<line>1021</line>
</event>
<extra>jpc_putuint16</extra>
<subcategory>none</subcategory>
</error>
<error>
<checker>CHECKED_RETURN</checker>
<template>checked_return_multievent_v1</template>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/jpc/jpc_cs.c</file>
<function>jpc_qcx_putcompparms</function>
<score>100</score>
<ordered>true</ordered>
<event>
<main>true</main>
<tag>check_return</tag>
<description>{CovLStr{v1}{Calling function {0} without checking return value (as is done elsewhere {1} out of {2} times).}{&quot;jpc_putuint8(jas_stream_t *, uint_fast8_t)&quot;}{11}{14}}</description>
<line>1015</line>
</event>
<event>
<event_set>1</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_putuint8(out, compparms-&gt;numdlvls)&quot;}{&quot;jpc_putuint8(out, compparms-&gt;numdlvls)&quot;}}</description>
<line>777</line>
</event>
<event>
<event_set>2</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_putuint8(out, ((compparms-&gt;rlvls[i].parheightval &amp; 0xf) &lt;&lt; 4) | (compparms-&gt;rlvls[i].parwidthval &amp; 0xf))&quot;}{&quot;jpc_putuint8(out, ((compparms-&gt;rlvls[i].parheightval &amp; 0xf) &lt;&lt; 4) | (compparms-&gt;rlvls[i].parwidthval &amp; 0xf))&quot;}}</description>
<line>786</line>
</event>
<event>
<event_set>3</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_putuint8(out, coc-&gt;compno)&quot;}{&quot;jpc_putuint8(out, coc-&gt;compno)&quot;}}</description>
<line>691</line>
</event>
<event>
<event_set>4</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_putuint8(out, coc-&gt;compparms.csty)&quot;}{&quot;jpc_putuint8(out, coc-&gt;compparms.csty)&quot;}}</description>
<line>699</line>
</event>
<event>
<event_set>5</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_putuint8(out, cod-&gt;compparms.csty)&quot;}{&quot;jpc_putuint8(out, cod-&gt;compparms.csty)&quot;}}</description>
<line>614</line>
</event>
<event>
<tag>unchecked_value</tag>
<description>{CovLStr{v1}{No check of the return value of {0}.}{&quot;jpc_putuint8(out, ((compparms-&gt;numguard &amp; 7) &lt;&lt; 5) | compparms-&gt;qntsty)&quot;}}</description>
<line>1015</line>
</event>
<extra>jpc_putuint8</extra>
<subcategory>none</subcategory>
</error>
<error>
<checker>CHECKED_RETURN</checker>
<template>checked_return_multievent_v1</template>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/jpc/jpc_cs.c</file>
<function>jpc_qcx_putcompparms</function>
<score>100</score>
<ordered>true</ordered>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;i &lt; compparms-&gt;numstepsizes&quot;}}</description>
<line>1016</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;compparms-&gt;qntsty == 0&quot;}}</description>
<line>1017</line>
<path_event></path_event>
</event>
<event>
<main>true</main>
<tag>check_return</tag>
<description>{CovLStr{v1}{Calling function {0} without checking return value (as is done elsewhere {1} out of {2} times).}{&quot;jpc_putuint8(jas_stream_t *, uint_fast8_t)&quot;}{11}{14}}</description>
<line>1018</line>
</event>
<event>
<event_set>1</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_putuint8(out, compparms-&gt;numdlvls)&quot;}{&quot;jpc_putuint8(out, compparms-&gt;numdlvls)&quot;}}</description>
<line>777</line>
</event>
<event>
<event_set>2</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_putuint8(out, ((compparms-&gt;rlvls[i].parheightval &amp; 0xf) &lt;&lt; 4) | (compparms-&gt;rlvls[i].parwidthval &amp; 0xf))&quot;}{&quot;jpc_putuint8(out, ((compparms-&gt;rlvls[i].parheightval &amp; 0xf) &lt;&lt; 4) | (compparms-&gt;rlvls[i].parwidthval &amp; 0xf))&quot;}}</description>
<line>786</line>
</event>
<event>
<event_set>3</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_putuint8(out, coc-&gt;compno)&quot;}{&quot;jpc_putuint8(out, coc-&gt;compno)&quot;}}</description>
<line>691</line>
</event>
<event>
<event_set>4</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_putuint8(out, coc-&gt;compparms.csty)&quot;}{&quot;jpc_putuint8(out, coc-&gt;compparms.csty)&quot;}}</description>
<line>699</line>
</event>
<event>
<event_set>5</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_putuint8(out, cod-&gt;compparms.csty)&quot;}{&quot;jpc_putuint8(out, cod-&gt;compparms.csty)&quot;}}</description>
<line>614</line>
</event>
<event>
<tag>unchecked_value</tag>
<description>{CovLStr{v1}{No check of the return value of {0}.}{&quot;jpc_putuint8(out, (compparms-&gt;stepsizes[i] &gt;&gt; 11) &lt;&lt; 3)&quot;}}</description>
<line>1018</line>
</event>
<extra>jpc_putuint8</extra>
<subcategory>none</subcategory>
</error>
<error>
<checker>CHECKED_RETURN</checker>
<template>checked_return_multievent_v1</template>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/jpc/jpc_cs.c</file>
<function>jpc_qcx_getcompparms</function>
<score>100</score>
<ordered>true</ordered>
<event>
<tag>switch</tag>
<description>{CovLStr{v1}{Switch case value {0}}{&quot;1&quot;}}</description>
<line>973</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>switch_case</tag>
<description>{CovLStr{v1}{Reached case {0}}{&quot;1&quot;}}</description>
<line>974</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>break</tag>
<description>{CovLStr{v1}{Breaking from switch}}</description>
<line>976</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>switch_end</tag>
<description>{CovLStr{v1}{Reached end of switch}}</description>
<line>984</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;compparms-&gt;numstepsizes &gt; 0&quot;}}</description>
<line>985</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;compparms-&gt;stepsizes&quot;}}</description>
<line>988</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;i &lt; compparms-&gt;numstepsizes&quot;}}</description>
<line>989</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;compparms-&gt;qntsty == 0&quot;}}</description>
<line>990</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>else_branch</tag>
<description>{CovLStr{v1}{Reached else branch}}</description>
<line>993</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<main>true</main>
<tag>check_return</tag>
<description>{CovLStr{v1}{Calling function {0} without checking return value (as is done elsewhere {1} out of {2} times).}{&quot;jpc_getuint16(jas_stream_t *, uint_fast16_t *)&quot;}{14}{16}}</description>
<line>994</line>
</event>
<event>
<event_set>1</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_getuint16(in, &amp;ms-&gt;id)&quot;}{&quot;jpc_getuint16(in, &amp;ms-&gt;id)&quot;}}</description>
<line>243</line>
</event>
<event>
<event_set>2</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_getuint16(in, &amp;ms-&gt;len)&quot;}{&quot;jpc_getuint16(in, &amp;ms-&gt;len)&quot;}}</description>
<line>258</line>
</event>
<event>
<event_set>3</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_getuint16(in, &amp;coc-&gt;compno)&quot;}{&quot;jpc_getuint16(in, &amp;coc-&gt;compno)&quot;}}</description>
<line>669</line>
</event>
<event>
<event_set>4</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_getuint16(in, &amp;cod-&gt;numlyrs)&quot;}{&quot;jpc_getuint16(in, &amp;cod-&gt;numlyrs)&quot;}}</description>
<line>593</line>
</event>
<event>
<event_set>5</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_getuint16(in, &amp;com-&gt;regid)&quot;}{&quot;jpc_getuint16(in, &amp;com-&gt;regid)&quot;}}</description>
<line>1396</line>
</event>
<event>
<tag>unchecked_value</tag>
<description>{CovLStr{v1}{No check of the return value of {0}.}{&quot;jpc_getuint16(in, compparms-&gt;stepsizes + i)&quot;}}</description>
<line>994</line>
</event>
<extra>jpc_getuint16</extra>
<subcategory>none</subcategory>
</error>
<error>
<checker>CHECKED_RETURN</checker>
<template>checked_return_multievent_v1</template>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/jpc/jpc_cs.c</file>
<function>jpc_qcx_getcompparms</function>
<score>100</score>
<ordered>true</ordered>
<event>
<main>true</main>
<tag>check_return</tag>
<description>{CovLStr{v1}{Calling function {0} without checking return value (as is done elsewhere {1} out of {2} times).}{&quot;jpc_getuint8(jas_stream_t *, uint_fast8_t *)&quot;}{17}{20}}</description>
<line>969</line>
</event>
<event>
<event_set>1</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_getuint8(in, &amp;compparms-&gt;numdlvls)&quot;}{&quot;jpc_getuint8(in, &amp;compparms-&gt;numdlvls)&quot;}}</description>
<line>739</line>
</event>
<event>
<event_set>2</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_getuint8(in, &amp;tmp)&quot;}{&quot;jpc_getuint8(in, &amp;tmp)&quot;}}</description>
<line>749</line>
</event>
<event>
<event_set>3</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_getuint8(in, &amp;tmp)&quot;}{&quot;jpc_getuint8(in, &amp;tmp)&quot;}}</description>
<line>664</line>
</event>
<event>
<event_set>4</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_getuint8(in, &amp;coc-&gt;compparms.csty)&quot;}{&quot;jpc_getuint8(in, &amp;coc-&gt;compparms.csty)&quot;}}</description>
<line>673</line>
</event>
<event>
<event_set>5</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_getuint8(in, &amp;cod-&gt;csty)&quot;}{&quot;jpc_getuint8(in, &amp;cod-&gt;csty)&quot;}}</description>
<line>590</line>
</event>
<event>
<tag>unchecked_value</tag>
<description>{CovLStr{v1}{No check of the return value of {0}.}{&quot;jpc_getuint8(in, &amp;tmp)&quot;}}</description>
<line>969</line>
</event>
<extra>jpc_getuint8</extra>
<subcategory>none</subcategory>
</error>
<error>
<checker>CHECKED_RETURN</checker>
<template>checked_return_multievent_v1</template>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/jpc/jpc_cs.c</file>
<function>jpc_qcx_getcompparms</function>
<score>100</score>
<ordered>true</ordered>
<event>
<tag>switch</tag>
<description>{CovLStr{v1}{Switch case value {0}}{&quot;0&quot;}}</description>
<line>973</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>switch_case</tag>
<description>{CovLStr{v1}{Reached case {0}}{&quot;0&quot;}}</description>
<line>977</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>break</tag>
<description>{CovLStr{v1}{Breaking from switch}}</description>
<line>979</line>
<path_event>
<jump>true</jump>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>switch_end</tag>
<description>{CovLStr{v1}{Reached end of switch}}</description>
<line>984</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;compparms-&gt;numstepsizes &gt; 0&quot;}}</description>
<line>985</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;compparms-&gt;stepsizes&quot;}}</description>
<line>988</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;i &lt; compparms-&gt;numstepsizes&quot;}}</description>
<line>989</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;compparms-&gt;qntsty == 0&quot;}}</description>
<line>990</line>
<path_event></path_event>
</event>
<event>
<main>true</main>
<tag>check_return</tag>
<description>{CovLStr{v1}{Calling function {0} without checking return value (as is done elsewhere {1} out of {2} times).}{&quot;jpc_getuint8(jas_stream_t *, uint_fast8_t *)&quot;}{17}{20}}</description>
<line>991</line>
</event>
<event>
<event_set>1</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_getuint8(in, &amp;compparms-&gt;numdlvls)&quot;}{&quot;jpc_getuint8(in, &amp;compparms-&gt;numdlvls)&quot;}}</description>
<line>739</line>
</event>
<event>
<event_set>2</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_getuint8(in, &amp;tmp)&quot;}{&quot;jpc_getuint8(in, &amp;tmp)&quot;}}</description>
<line>749</line>
</event>
<event>
<event_set>3</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_getuint8(in, &amp;tmp)&quot;}{&quot;jpc_getuint8(in, &amp;tmp)&quot;}}</description>
<line>664</line>
</event>
<event>
<event_set>4</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_getuint8(in, &amp;coc-&gt;compparms.csty)&quot;}{&quot;jpc_getuint8(in, &amp;coc-&gt;compparms.csty)&quot;}}</description>
<line>673</line>
</event>
<event>
<event_set>5</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_getuint8(in, &amp;cod-&gt;csty)&quot;}{&quot;jpc_getuint8(in, &amp;cod-&gt;csty)&quot;}}</description>
<line>590</line>
</event>
<event>
<tag>unchecked_value</tag>
<description>{CovLStr{v1}{No check of the return value of {0}.}{&quot;jpc_getuint8(in, &amp;tmp)&quot;}}</description>
<line>991</line>
</event>
<extra>jpc_getuint8</extra>
<subcategory>none</subcategory>
</error>
<error>
<checker>CHECKED_RETURN</checker>
<template>checked_return_multievent_v1</template>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/mif/mif_cod.c</file>
<function>mif_hdr_put</function>
<score>100</score>
<ordered>true</ordered>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!(out-&gt;flags_ &amp; 7)&quot;}}</description>
<line>598</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;out-&gt;rwlimit_ &gt;= 0L&quot;}}</description>
<line>598</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;out-&gt;rwcnt_ &gt;= out-&gt;rwlimit_&quot;}}</description>
<line>598</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;--out-&gt;cnt_ &lt; 0&quot;}}</description>
<line>598</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;(out-&gt;bufmode_ |= 0x20) , (--out-&gt;cnt_ &lt; 0)&quot;}}</description>
<line>598</line>
<path_event></path_event>
</event>
<event>
<main>true</main>
<tag>check_return</tag>
<description>{CovLStr{v1}{Calling function {0} without checking return value (as is done elsewhere {1} out of {2} times).}{&quot;jas_stream_flushbuf(jas_stream_t *, int)&quot;}{61}{69}}</description>
<line>598</line>
</event>
<event>
<event_set>1</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_stream_flushbuf(out, (unsigned char)c)&quot;}{&quot;(!(out-&gt;flags_ &amp; 7) ? (out-&gt;rwlimit_ &gt;= 0L &amp;&amp; out-&gt;rwcnt_ &gt;= out-&gt;rwlimit_) ? (out-&gt;flags_ |= 4) , -1 : (((out-&gt;bufmode_ |= 0x20) , (--out-&gt;cnt_ &lt; 0)) ? jas_stream_flushbuf(out, (unsigned char)c) : ((++out-&gt;rwcnt_) , ((int)(*out-&gt;ptr_++ = c)))) : -1) == -1&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_icc.c</file>
<line>1642</line>
</event>
<event>
<event_set>2</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_stream_flushbuf(out, 0)&quot;}{&quot;(!(out-&gt;flags_ &amp; 7) ? (out-&gt;rwlimit_ &gt;= 0L &amp;&amp; out-&gt;rwcnt_ &gt;= out-&gt;rwlimit_) ? (out-&gt;flags_ |= 4) , -1 : (((out-&gt;bufmode_ |= 0x20) , (--out-&gt;cnt_ &lt; 0)) ? jas_stream_flushbuf(out, 0) : ((++out-&gt;rwcnt_) , ((int)(*out-&gt;ptr_++ = 0)))) : -1) == -1&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_icc.c</file>
<line>1520</line>
</event>
<event>
<event_set>3</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_stream_flushbuf(out, (unsigned char)lut16-&gt;numinchans)&quot;}{&quot;(!(out-&gt;flags_ &amp; 7) ? (out-&gt;rwlimit_ &gt;= 0L &amp;&amp; out-&gt;rwcnt_ &gt;= out-&gt;rwlimit_) ? (out-&gt;flags_ |= 4) , -1 : (((out-&gt;bufmode_ |= 0x20) , (--out-&gt;cnt_ &lt; 0)) ? jas_stream_flushbuf(out, (unsigned char)lut16-&gt;numinchans) : ((++out-&gt;rwcnt_) , ((int)(*out-&gt;ptr_++ = lut16-&gt;numinchans)))) : -1) == -1&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_icc.c</file>
<line>1520</line>
</event>
<event>
<event_set>4</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_stream_flushbuf(out, 0)&quot;}{&quot;(!(out-&gt;flags_ &amp; 7) ? (out-&gt;rwlimit_ &gt;= 0L &amp;&amp; out-&gt;rwcnt_ &gt;= out-&gt;rwlimit_) ? (out-&gt;flags_ |= 4) , -1 : (((out-&gt;bufmode_ |= 0x20) , (--out-&gt;cnt_ &lt; 0)) ? jas_stream_flushbuf(out, 0) : ((++out-&gt;rwcnt_) , ((int)(*out-&gt;ptr_++ = 0)))) : -1) == -1&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_icc.c</file>
<line>1356</line>
</event>
<event>
<event_set>5</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_stream_flushbuf(out, (unsigned char)lut8-&gt;numinchans)&quot;}{&quot;(!(out-&gt;flags_ &amp; 7) ? (out-&gt;rwlimit_ &gt;= 0L &amp;&amp; out-&gt;rwcnt_ &gt;= out-&gt;rwlimit_) ? (out-&gt;flags_ |= 4) , -1 : (((out-&gt;bufmode_ |= 0x20) , (--out-&gt;cnt_ &lt; 0)) ? jas_stream_flushbuf(out, (unsigned char)lut8-&gt;numinchans) : ((++out-&gt;rwcnt_) , ((int)(*out-&gt;ptr_++ = lut8-&gt;numinchans)))) : -1) == -1&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_icc.c</file>
<line>1356</line>
</event>
<event>
<tag>unchecked_value</tag>
<description>{CovLStr{v1}{No check of the return value of {0}.}{&quot;jas_stream_flushbuf(out, 77)&quot;}}</description>
<line>598</line>
</event>
<extra>jas_stream_flushbuf</extra>
<subcategory>none</subcategory>
</error>
<error>
<checker>CHECKED_RETURN</checker>
<template>checked_return_multievent_v1</template>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/mif/mif_cod.c</file>
<function>mif_hdr_put</function>
<score>100</score>
<ordered>true</ordered>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!(out-&gt;flags_ &amp; 7)&quot;}}</description>
<line>598</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;out-&gt;rwlimit_ &gt;= 0L&quot;}}</description>
<line>598</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;out-&gt;rwcnt_ &gt;= out-&gt;rwlimit_&quot;}}</description>
<line>598</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;--out-&gt;cnt_ &lt; 0&quot;}}</description>
<line>598</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;(out-&gt;bufmode_ |= 0x20) , (--out-&gt;cnt_ &lt; 0)&quot;}}</description>
<line>598</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!(out-&gt;flags_ &amp; 7)&quot;}}</description>
<line>599</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;out-&gt;rwlimit_ &gt;= 0L&quot;}}</description>
<line>599</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;out-&gt;rwcnt_ &gt;= out-&gt;rwlimit_&quot;}}</description>
<line>599</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;--out-&gt;cnt_ &lt; 0&quot;}}</description>
<line>599</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;(out-&gt;bufmode_ |= 0x20) , (--out-&gt;cnt_ &lt; 0)&quot;}}</description>
<line>599</line>
<path_event></path_event>
</event>
<event>
<main>true</main>
<tag>check_return</tag>
<description>{CovLStr{v1}{Calling function {0} without checking return value (as is done elsewhere {1} out of {2} times).}{&quot;jas_stream_flushbuf(jas_stream_t *, int)&quot;}{61}{69}}</description>
<line>599</line>
</event>
<event>
<event_set>1</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_stream_flushbuf(out, (unsigned char)c)&quot;}{&quot;(!(out-&gt;flags_ &amp; 7) ? (out-&gt;rwlimit_ &gt;= 0L &amp;&amp; out-&gt;rwcnt_ &gt;= out-&gt;rwlimit_) ? (out-&gt;flags_ |= 4) , -1 : (((out-&gt;bufmode_ |= 0x20) , (--out-&gt;cnt_ &lt; 0)) ? jas_stream_flushbuf(out, (unsigned char)c) : ((++out-&gt;rwcnt_) , ((int)(*out-&gt;ptr_++ = c)))) : -1) == -1&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_icc.c</file>
<line>1642</line>
</event>
<event>
<event_set>2</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_stream_flushbuf(out, 0)&quot;}{&quot;(!(out-&gt;flags_ &amp; 7) ? (out-&gt;rwlimit_ &gt;= 0L &amp;&amp; out-&gt;rwcnt_ &gt;= out-&gt;rwlimit_) ? (out-&gt;flags_ |= 4) , -1 : (((out-&gt;bufmode_ |= 0x20) , (--out-&gt;cnt_ &lt; 0)) ? jas_stream_flushbuf(out, 0) : ((++out-&gt;rwcnt_) , ((int)(*out-&gt;ptr_++ = 0)))) : -1) == -1&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_icc.c</file>
<line>1520</line>
</event>
<event>
<event_set>3</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_stream_flushbuf(out, (unsigned char)lut16-&gt;numinchans)&quot;}{&quot;(!(out-&gt;flags_ &amp; 7) ? (out-&gt;rwlimit_ &gt;= 0L &amp;&amp; out-&gt;rwcnt_ &gt;= out-&gt;rwlimit_) ? (out-&gt;flags_ |= 4) , -1 : (((out-&gt;bufmode_ |= 0x20) , (--out-&gt;cnt_ &lt; 0)) ? jas_stream_flushbuf(out, (unsigned char)lut16-&gt;numinchans) : ((++out-&gt;rwcnt_) , ((int)(*out-&gt;ptr_++ = lut16-&gt;numinchans)))) : -1) == -1&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_icc.c</file>
<line>1520</line>
</event>
<event>
<event_set>4</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_stream_flushbuf(out, 0)&quot;}{&quot;(!(out-&gt;flags_ &amp; 7) ? (out-&gt;rwlimit_ &gt;= 0L &amp;&amp; out-&gt;rwcnt_ &gt;= out-&gt;rwlimit_) ? (out-&gt;flags_ |= 4) , -1 : (((out-&gt;bufmode_ |= 0x20) , (--out-&gt;cnt_ &lt; 0)) ? jas_stream_flushbuf(out, 0) : ((++out-&gt;rwcnt_) , ((int)(*out-&gt;ptr_++ = 0)))) : -1) == -1&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_icc.c</file>
<line>1356</line>
</event>
<event>
<event_set>5</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_stream_flushbuf(out, (unsigned char)lut8-&gt;numinchans)&quot;}{&quot;(!(out-&gt;flags_ &amp; 7) ? (out-&gt;rwlimit_ &gt;= 0L &amp;&amp; out-&gt;rwcnt_ &gt;= out-&gt;rwlimit_) ? (out-&gt;flags_ |= 4) , -1 : (((out-&gt;bufmode_ |= 0x20) , (--out-&gt;cnt_ &lt; 0)) ? jas_stream_flushbuf(out, (unsigned char)lut8-&gt;numinchans) : ((++out-&gt;rwcnt_) , ((int)(*out-&gt;ptr_++ = lut8-&gt;numinchans)))) : -1) == -1&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_icc.c</file>
<line>1356</line>
</event>
<event>
<tag>unchecked_value</tag>
<description>{CovLStr{v1}{No check of the return value of {0}.}{&quot;jas_stream_flushbuf(out, 73)&quot;}}</description>
<line>599</line>
</event>
<extra>jas_stream_flushbuf</extra>
<subcategory>none</subcategory>
</error>
<error>
<checker>CHECKED_RETURN</checker>
<template>checked_return_multievent_v1</template>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/mif/mif_cod.c</file>
<function>mif_hdr_put</function>
<score>100</score>
<ordered>true</ordered>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!(out-&gt;flags_ &amp; 7)&quot;}}</description>
<line>598</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;out-&gt;rwlimit_ &gt;= 0L&quot;}}</description>
<line>598</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;out-&gt;rwcnt_ &gt;= out-&gt;rwlimit_&quot;}}</description>
<line>598</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;--out-&gt;cnt_ &lt; 0&quot;}}</description>
<line>598</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;(out-&gt;bufmode_ |= 0x20) , (--out-&gt;cnt_ &lt; 0)&quot;}}</description>
<line>598</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!(out-&gt;flags_ &amp; 7)&quot;}}</description>
<line>599</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;out-&gt;rwlimit_ &gt;= 0L&quot;}}</description>
<line>599</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;out-&gt;rwcnt_ &gt;= out-&gt;rwlimit_&quot;}}</description>
<line>599</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;--out-&gt;cnt_ &lt; 0&quot;}}</description>
<line>599</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;(out-&gt;bufmode_ |= 0x20) , (--out-&gt;cnt_ &lt; 0)&quot;}}</description>
<line>599</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!(out-&gt;flags_ &amp; 7)&quot;}}</description>
<line>600</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;out-&gt;rwlimit_ &gt;= 0L&quot;}}</description>
<line>600</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;out-&gt;rwcnt_ &gt;= out-&gt;rwlimit_&quot;}}</description>
<line>600</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;--out-&gt;cnt_ &lt; 0&quot;}}</description>
<line>600</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;(out-&gt;bufmode_ |= 0x20) , (--out-&gt;cnt_ &lt; 0)&quot;}}</description>
<line>600</line>
<path_event></path_event>
</event>
<event>
<main>true</main>
<tag>check_return</tag>
<description>{CovLStr{v1}{Calling function {0} without checking return value (as is done elsewhere {1} out of {2} times).}{&quot;jas_stream_flushbuf(jas_stream_t *, int)&quot;}{61}{69}}</description>
<line>600</line>
</event>
<event>
<event_set>1</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_stream_flushbuf(out, (unsigned char)c)&quot;}{&quot;(!(out-&gt;flags_ &amp; 7) ? (out-&gt;rwlimit_ &gt;= 0L &amp;&amp; out-&gt;rwcnt_ &gt;= out-&gt;rwlimit_) ? (out-&gt;flags_ |= 4) , -1 : (((out-&gt;bufmode_ |= 0x20) , (--out-&gt;cnt_ &lt; 0)) ? jas_stream_flushbuf(out, (unsigned char)c) : ((++out-&gt;rwcnt_) , ((int)(*out-&gt;ptr_++ = c)))) : -1) == -1&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_icc.c</file>
<line>1642</line>
</event>
<event>
<event_set>2</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_stream_flushbuf(out, 0)&quot;}{&quot;(!(out-&gt;flags_ &amp; 7) ? (out-&gt;rwlimit_ &gt;= 0L &amp;&amp; out-&gt;rwcnt_ &gt;= out-&gt;rwlimit_) ? (out-&gt;flags_ |= 4) , -1 : (((out-&gt;bufmode_ |= 0x20) , (--out-&gt;cnt_ &lt; 0)) ? jas_stream_flushbuf(out, 0) : ((++out-&gt;rwcnt_) , ((int)(*out-&gt;ptr_++ = 0)))) : -1) == -1&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_icc.c</file>
<line>1520</line>
</event>
<event>
<event_set>3</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_stream_flushbuf(out, (unsigned char)lut16-&gt;numinchans)&quot;}{&quot;(!(out-&gt;flags_ &amp; 7) ? (out-&gt;rwlimit_ &gt;= 0L &amp;&amp; out-&gt;rwcnt_ &gt;= out-&gt;rwlimit_) ? (out-&gt;flags_ |= 4) , -1 : (((out-&gt;bufmode_ |= 0x20) , (--out-&gt;cnt_ &lt; 0)) ? jas_stream_flushbuf(out, (unsigned char)lut16-&gt;numinchans) : ((++out-&gt;rwcnt_) , ((int)(*out-&gt;ptr_++ = lut16-&gt;numinchans)))) : -1) == -1&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_icc.c</file>
<line>1520</line>
</event>
<event>
<event_set>4</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_stream_flushbuf(out, 0)&quot;}{&quot;(!(out-&gt;flags_ &amp; 7) ? (out-&gt;rwlimit_ &gt;= 0L &amp;&amp; out-&gt;rwcnt_ &gt;= out-&gt;rwlimit_) ? (out-&gt;flags_ |= 4) , -1 : (((out-&gt;bufmode_ |= 0x20) , (--out-&gt;cnt_ &lt; 0)) ? jas_stream_flushbuf(out, 0) : ((++out-&gt;rwcnt_) , ((int)(*out-&gt;ptr_++ = 0)))) : -1) == -1&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_icc.c</file>
<line>1356</line>
</event>
<event>
<event_set>5</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_stream_flushbuf(out, (unsigned char)lut8-&gt;numinchans)&quot;}{&quot;(!(out-&gt;flags_ &amp; 7) ? (out-&gt;rwlimit_ &gt;= 0L &amp;&amp; out-&gt;rwcnt_ &gt;= out-&gt;rwlimit_) ? (out-&gt;flags_ |= 4) , -1 : (((out-&gt;bufmode_ |= 0x20) , (--out-&gt;cnt_ &lt; 0)) ? jas_stream_flushbuf(out, (unsigned char)lut8-&gt;numinchans) : ((++out-&gt;rwcnt_) , ((int)(*out-&gt;ptr_++ = lut8-&gt;numinchans)))) : -1) == -1&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_icc.c</file>
<line>1356</line>
</event>
<event>
<tag>unchecked_value</tag>
<description>{CovLStr{v1}{No check of the return value of {0}.}{&quot;jas_stream_flushbuf(out, 70)&quot;}}</description>
<line>600</line>
</event>
<extra>jas_stream_flushbuf</extra>
<subcategory>none</subcategory>
</error>
<error>
<checker>CHECKED_RETURN</checker>
<template>checked_return_multievent_v1</template>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/mif/mif_cod.c</file>
<function>mif_hdr_put</function>
<score>100</score>
<ordered>true</ordered>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!(out-&gt;flags_ &amp; 7)&quot;}}</description>
<line>598</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;out-&gt;rwlimit_ &gt;= 0L&quot;}}</description>
<line>598</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;out-&gt;rwcnt_ &gt;= out-&gt;rwlimit_&quot;}}</description>
<line>598</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;--out-&gt;cnt_ &lt; 0&quot;}}</description>
<line>598</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;(out-&gt;bufmode_ |= 0x20) , (--out-&gt;cnt_ &lt; 0)&quot;}}</description>
<line>598</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!(out-&gt;flags_ &amp; 7)&quot;}}</description>
<line>599</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;out-&gt;rwlimit_ &gt;= 0L&quot;}}</description>
<line>599</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;out-&gt;rwcnt_ &gt;= out-&gt;rwlimit_&quot;}}</description>
<line>599</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;--out-&gt;cnt_ &lt; 0&quot;}}</description>
<line>599</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;(out-&gt;bufmode_ |= 0x20) , (--out-&gt;cnt_ &lt; 0)&quot;}}</description>
<line>599</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!(out-&gt;flags_ &amp; 7)&quot;}}</description>
<line>600</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;out-&gt;rwlimit_ &gt;= 0L&quot;}}</description>
<line>600</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;out-&gt;rwcnt_ &gt;= out-&gt;rwlimit_&quot;}}</description>
<line>600</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;--out-&gt;cnt_ &lt; 0&quot;}}</description>
<line>600</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;(out-&gt;bufmode_ |= 0x20) , (--out-&gt;cnt_ &lt; 0)&quot;}}</description>
<line>600</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!(out-&gt;flags_ &amp; 7)&quot;}}</description>
<line>601</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;out-&gt;rwlimit_ &gt;= 0L&quot;}}</description>
<line>601</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;out-&gt;rwcnt_ &gt;= out-&gt;rwlimit_&quot;}}</description>
<line>601</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;--out-&gt;cnt_ &lt; 0&quot;}}</description>
<line>601</line>
<path_event></path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;(out-&gt;bufmode_ |= 0x20) , (--out-&gt;cnt_ &lt; 0)&quot;}}</description>
<line>601</line>
<path_event></path_event>
</event>
<event>
<main>true</main>
<tag>check_return</tag>
<description>{CovLStr{v1}{Calling function {0} without checking return value (as is done elsewhere {1} out of {2} times).}{&quot;jas_stream_flushbuf(jas_stream_t *, int)&quot;}{61}{69}}</description>
<line>601</line>
</event>
<event>
<event_set>1</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_stream_flushbuf(out, (unsigned char)c)&quot;}{&quot;(!(out-&gt;flags_ &amp; 7) ? (out-&gt;rwlimit_ &gt;= 0L &amp;&amp; out-&gt;rwcnt_ &gt;= out-&gt;rwlimit_) ? (out-&gt;flags_ |= 4) , -1 : (((out-&gt;bufmode_ |= 0x20) , (--out-&gt;cnt_ &lt; 0)) ? jas_stream_flushbuf(out, (unsigned char)c) : ((++out-&gt;rwcnt_) , ((int)(*out-&gt;ptr_++ = c)))) : -1) == -1&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_icc.c</file>
<line>1642</line>
</event>
<event>
<event_set>2</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_stream_flushbuf(out, 0)&quot;}{&quot;(!(out-&gt;flags_ &amp; 7) ? (out-&gt;rwlimit_ &gt;= 0L &amp;&amp; out-&gt;rwcnt_ &gt;= out-&gt;rwlimit_) ? (out-&gt;flags_ |= 4) , -1 : (((out-&gt;bufmode_ |= 0x20) , (--out-&gt;cnt_ &lt; 0)) ? jas_stream_flushbuf(out, 0) : ((++out-&gt;rwcnt_) , ((int)(*out-&gt;ptr_++ = 0)))) : -1) == -1&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_icc.c</file>
<line>1520</line>
</event>
<event>
<event_set>3</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_stream_flushbuf(out, (unsigned char)lut16-&gt;numinchans)&quot;}{&quot;(!(out-&gt;flags_ &amp; 7) ? (out-&gt;rwlimit_ &gt;= 0L &amp;&amp; out-&gt;rwcnt_ &gt;= out-&gt;rwlimit_) ? (out-&gt;flags_ |= 4) , -1 : (((out-&gt;bufmode_ |= 0x20) , (--out-&gt;cnt_ &lt; 0)) ? jas_stream_flushbuf(out, (unsigned char)lut16-&gt;numinchans) : ((++out-&gt;rwcnt_) , ((int)(*out-&gt;ptr_++ = lut16-&gt;numinchans)))) : -1) == -1&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_icc.c</file>
<line>1520</line>
</event>
<event>
<event_set>4</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_stream_flushbuf(out, 0)&quot;}{&quot;(!(out-&gt;flags_ &amp; 7) ? (out-&gt;rwlimit_ &gt;= 0L &amp;&amp; out-&gt;rwcnt_ &gt;= out-&gt;rwlimit_) ? (out-&gt;flags_ |= 4) , -1 : (((out-&gt;bufmode_ |= 0x20) , (--out-&gt;cnt_ &lt; 0)) ? jas_stream_flushbuf(out, 0) : ((++out-&gt;rwcnt_) , ((int)(*out-&gt;ptr_++ = 0)))) : -1) == -1&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_icc.c</file>
<line>1356</line>
</event>
<event>
<event_set>5</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_stream_flushbuf(out, (unsigned char)lut8-&gt;numinchans)&quot;}{&quot;(!(out-&gt;flags_ &amp; 7) ? (out-&gt;rwlimit_ &gt;= 0L &amp;&amp; out-&gt;rwcnt_ &gt;= out-&gt;rwlimit_) ? (out-&gt;flags_ |= 4) , -1 : (((out-&gt;bufmode_ |= 0x20) , (--out-&gt;cnt_ &lt; 0)) ? jas_stream_flushbuf(out, (unsigned char)lut8-&gt;numinchans) : ((++out-&gt;rwcnt_) , ((int)(*out-&gt;ptr_++ = lut8-&gt;numinchans)))) : -1) == -1&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_icc.c</file>
<line>1356</line>
</event>
<event>
<tag>unchecked_value</tag>
<description>{CovLStr{v1}{No check of the return value of {0}.}{&quot;jas_stream_flushbuf(out, 10)&quot;}}</description>
<line>601</line>
</event>
<extra>jas_stream_flushbuf</extra>
<subcategory>none</subcategory>
</error>
<error>
<checker>CHECKED_RETURN</checker>
<template>checked_return_multievent_v1</template>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/jpc/jpc_cs.c</file>
<function>jpc_qcc_getparms</function>
<score>100</score>
<ordered>true</ordered>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;cstate-&gt;numcomps &lt;= 256U&quot;}}</description>
<line>900</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>else_branch</tag>
<description>{CovLStr{v1}{Reached else branch}}</description>
<line>904</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<main>true</main>
<tag>check_return</tag>
<description>{CovLStr{v1}{Calling function {0} without checking return value (as is done elsewhere {1} out of {2} times).}{&quot;jpc_getuint16(jas_stream_t *, uint_fast16_t *)&quot;}{14}{16}}</description>
<line>905</line>
</event>
<event>
<event_set>1</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_getuint16(in, &amp;ms-&gt;id)&quot;}{&quot;jpc_getuint16(in, &amp;ms-&gt;id)&quot;}}</description>
<line>243</line>
</event>
<event>
<event_set>2</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_getuint16(in, &amp;ms-&gt;len)&quot;}{&quot;jpc_getuint16(in, &amp;ms-&gt;len)&quot;}}</description>
<line>258</line>
</event>
<event>
<event_set>3</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_getuint16(in, &amp;coc-&gt;compno)&quot;}{&quot;jpc_getuint16(in, &amp;coc-&gt;compno)&quot;}}</description>
<line>669</line>
</event>
<event>
<event_set>4</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_getuint16(in, &amp;cod-&gt;numlyrs)&quot;}{&quot;jpc_getuint16(in, &amp;cod-&gt;numlyrs)&quot;}}</description>
<line>593</line>
</event>
<event>
<event_set>5</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_getuint16(in, &amp;com-&gt;regid)&quot;}{&quot;jpc_getuint16(in, &amp;com-&gt;regid)&quot;}}</description>
<line>1396</line>
</event>
<event>
<tag>unchecked_value</tag>
<description>{CovLStr{v1}{No check of the return value of {0}.}{&quot;jpc_getuint16(in, &amp;qcc-&gt;compno)&quot;}}</description>
<line>905</line>
</event>
<extra>jpc_getuint16</extra>
<subcategory>none</subcategory>
</error>
<error>
<checker>CHECKED_RETURN</checker>
<template>checked_return_multievent_v1</template>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/jpc/jpc_cs.c</file>
<function>jpc_qcc_getparms</function>
<score>100</score>
<ordered>true</ordered>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;cstate-&gt;numcomps &lt;= 256U&quot;}}</description>
<line>900</line>
<path_event></path_event>
</event>
<event>
<main>true</main>
<tag>check_return</tag>
<description>{CovLStr{v1}{Calling function {0} without checking return value (as is done elsewhere {1} out of {2} times).}{&quot;jpc_getuint8(jas_stream_t *, uint_fast8_t *)&quot;}{17}{20}}</description>
<line>901</line>
</event>
<event>
<event_set>1</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_getuint8(in, &amp;compparms-&gt;numdlvls)&quot;}{&quot;jpc_getuint8(in, &amp;compparms-&gt;numdlvls)&quot;}}</description>
<line>739</line>
</event>
<event>
<event_set>2</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_getuint8(in, &amp;tmp)&quot;}{&quot;jpc_getuint8(in, &amp;tmp)&quot;}}</description>
<line>749</line>
</event>
<event>
<event_set>3</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_getuint8(in, &amp;tmp)&quot;}{&quot;jpc_getuint8(in, &amp;tmp)&quot;}}</description>
<line>664</line>
</event>
<event>
<event_set>4</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_getuint8(in, &amp;coc-&gt;compparms.csty)&quot;}{&quot;jpc_getuint8(in, &amp;coc-&gt;compparms.csty)&quot;}}</description>
<line>673</line>
</event>
<event>
<event_set>5</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_getuint8(in, &amp;cod-&gt;csty)&quot;}{&quot;jpc_getuint8(in, &amp;cod-&gt;csty)&quot;}}</description>
<line>590</line>
</event>
<event>
<tag>unchecked_value</tag>
<description>{CovLStr{v1}{No check of the return value of {0}.}{&quot;jpc_getuint8(in, &amp;tmp)&quot;}}</description>
<line>901</line>
</event>
<extra>jpc_getuint8</extra>
<subcategory>none</subcategory>
</error>
<error>
<checker>CHECKED_RETURN</checker>
<template>checked_return_multievent_v1</template>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/jpc/jpc_dec.c</file>
<function>jpc_dec_process_sod</function>
<score>100</score>
<ordered>true</ordered>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;!(tile = dec-&gt;curtile)&quot;}}</description>
<line>547</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>549</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;!tile-&gt;partno&quot;}}</description>
<line>551</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;!jpc_dec_cp_isvalid(tile-&gt;cp)&quot;}}</description>
<line>552</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>554</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;jpc_dec_tileinit(dec, tile)&quot;}}</description>
<line>556</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>558</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;dec-&gt;pkthdrstreams&quot;}}</description>
<line>562</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;!(tile-&gt;pkthdrstream = jpc_streamlist_remove(dec-&gt;pkthdrstreams, 0))&quot;}}</description>
<line>565</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>567</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;tile-&gt;pptstab&quot;}}</description>
<line>570</line>
<path_event></path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;!tile-&gt;pkthdrstream&quot;}}</description>
<line>571</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>575</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;jpc_pptstabwrite(tile-&gt;pkthdrstream, tile-&gt;pptstab)&quot;}}</description>
<line>578</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>if_end</tag>
<description>{CovLStr{v1}{End of if statement}}</description>
<line>580</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<main>true</main>
<tag>check_return</tag>
<description>{CovLStr{v1}{Calling function {0} without checking return value (as is done elsewhere {1} out of {2} times).}{&quot;jas_stream_seek(jas_stream_t *, long, int)&quot;}{17}{22}}</description>
<line>581</line>
</event>
<event>
<event_set>1</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_stream_seek(cmpt-&gt;stream_, 0L, 0)&quot;}{&quot;jas_stream_seek(cmpt-&gt;stream_, 0L, 0) &lt; 0L&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_image.c</file>
<line>330</line>
</event>
<event>
<event_set>2</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_stream_seek(cmpt-&gt;stream_, size - 1L, 0)&quot;}{&quot;jas_stream_seek(cmpt-&gt;stream_, size - 1L, 0) &lt; 0L&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_image.c</file>
<line>330</line>
</event>
<event>
<event_set>3</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_stream_seek(cmpt-&gt;stream_, (cmpt-&gt;width_ * (y + i) + x) * cmpt-&gt;cps_, 0)&quot;}{&quot;jas_stream_seek(cmpt-&gt;stream_, (cmpt-&gt;width_ * (y + i) + x) * cmpt-&gt;cps_, 0) &lt; 0L&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_image.c</file>
<line>490</line>
</event>
<event>
<event_set>4</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_stream_seek(cmpt-&gt;stream_, (cmpt-&gt;width_ * (y + i) + x) * cmpt-&gt;cps_, 0)&quot;}{&quot;jas_stream_seek(cmpt-&gt;stream_, (cmpt-&gt;width_ * (y + i) + x) * cmpt-&gt;cps_, 0) &lt; 0L&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_image.c</file>
<line>439</line>
</event>
<event>
<event_set>5</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jas_stream_seek(cmpt-&gt;stream_, 0L, 0)&quot;}{&quot;jas_stream_seek(cmpt-&gt;stream_, 0L, 0)&quot;}}</description>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/base/jas_image.c</file>
<line>270</line>
</event>
<event>
<tag>unchecked_value</tag>
<description>{CovLStr{v1}{No check of the return value of {0}.}{&quot;jas_stream_seek(tile-&gt;pkthdrstream, pos, 0)&quot;}}</description>
<line>581</line>
</event>
<extra>jas_stream_seek</extra>
<subcategory>none</subcategory>
</error>
<error>
<checker>CHECKED_RETURN</checker>
<template>checked_return_multievent_v1</template>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/jpc/jpc_cs.c</file>
<function>jpc_qcc_putparms</function>
<score>100</score>
<ordered>true</ordered>
<event>
<tag>cond_false</tag>
<description>{CovLStr{v1}{Condition {0}, taking false branch}{&quot;cstate-&gt;numcomps &lt;= 256U&quot;}}</description>
<line>921</line>
<path_event>
<jump>true</jump>
</path_event>
</event>
<event>
<tag>else_branch</tag>
<description>{CovLStr{v1}{Reached else branch}}</description>
<line>923</line>
<path_event>
<suppressible>true</suppressible>
</path_event>
</event>
<event>
<main>true</main>
<tag>check_return</tag>
<description>{CovLStr{v1}{Calling function {0} without checking return value (as is done elsewhere {1} out of {2} times).}{&quot;jpc_putuint16(jas_stream_t *, uint_fast16_t)&quot;}{11}{13}}</description>
<line>924</line>
</event>
<event>
<event_set>1</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_putuint16(out, ms-&gt;id)&quot;}{&quot;jpc_putuint16(out, ms-&gt;id)&quot;}}</description>
<line>326</line>
</event>
<event>
<event_set>2</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_putuint16(out, ms-&gt;len + 2U)&quot;}{&quot;jpc_putuint16(out, ms-&gt;len + 2U)&quot;}}</description>
<line>349</line>
</event>
<event>
<event_set>3</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_putuint16(out, coc-&gt;compno)&quot;}{&quot;jpc_putuint16(out, coc-&gt;compno)&quot;}}</description>
<line>695</line>
</event>
<event>
<event_set>4</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_putuint16(out, cod-&gt;numlyrs)&quot;}{&quot;jpc_putuint16(out, cod-&gt;numlyrs)&quot;}}</description>
<line>614</line>
</event>
<event>
<event_set>5</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_putuint16(out, com-&gt;regid)&quot;}{&quot;jpc_putuint16(out, com-&gt;regid)&quot;}}</description>
<line>1420</line>
</event>
<event>
<tag>unchecked_value</tag>
<description>{CovLStr{v1}{No check of the return value of {0}.}{&quot;jpc_putuint16(out, qcc-&gt;compno)&quot;}}</description>
<line>924</line>
</event>
<extra>jpc_putuint16</extra>
<subcategory>none</subcategory>
</error>
<error>
<checker>CHECKED_RETURN</checker>
<template>checked_return_multievent_v1</template>
<file>/home/rose/Desktop/jasper-1.900.1/src/libjasper/jpc/jpc_cs.c</file>
<function>jpc_qcc_putparms</function>
<score>100</score>
<ordered>true</ordered>
<event>
<tag>cond_true</tag>
<description>{CovLStr{v1}{Condition {0}, taking true branch}{&quot;cstate-&gt;numcomps &lt;= 256U&quot;}}</description>
<line>921</line>
<path_event></path_event>
</event>
<event>
<main>true</main>
<tag>check_return</tag>
<description>{CovLStr{v1}{Calling function {0} without checking return value (as is done elsewhere {1} out of {2} times).}{&quot;jpc_putuint8(jas_stream_t *, uint_fast8_t)&quot;}{11}{14}}</description>
<line>922</line>
</event>
<event>
<event_set>1</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_putuint8(out, compparms-&gt;numdlvls)&quot;}{&quot;jpc_putuint8(out, compparms-&gt;numdlvls)&quot;}}</description>
<line>777</line>
</event>
<event>
<event_set>2</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_putuint8(out, ((compparms-&gt;rlvls[i].parheightval &amp; 0xf) &lt;&lt; 4) | (compparms-&gt;rlvls[i].parwidthval &amp; 0xf))&quot;}{&quot;jpc_putuint8(out, ((compparms-&gt;rlvls[i].parheightval &amp; 0xf) &lt;&lt; 4) | (compparms-&gt;rlvls[i].parwidthval &amp; 0xf))&quot;}}</description>
<line>786</line>
</event>
<event>
<event_set>3</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_putuint8(out, coc-&gt;compno)&quot;}{&quot;jpc_putuint8(out, coc-&gt;compno)&quot;}}</description>
<line>691</line>
</event>
<event>
<event_set>4</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_putuint8(out, coc-&gt;compparms.csty)&quot;}{&quot;jpc_putuint8(out, coc-&gt;compparms.csty)&quot;}}</description>
<line>699</line>
</event>
<event>
<event_set>5</event_set>
<tag>example_checked</tag>
<description>{CovLStr{v1}{{0} has its value checked in {1}.}{&quot;jpc_putuint8(out, cod-&gt;compparms.csty)&quot;}{&quot;jpc_putuint8(out, cod-&gt;compparms.csty)&quot;}}</description>
<line>614</line>
</event>
<event>
<tag>unchecked_value</tag>
<description>{CovLStr{v1}{No check of the return value of {0}.}{&quot;jpc_putuint8(out, qcc-&gt;compno)&quot;}}</description>
<line>922</line>
</event>
<extra>jpc_putuint8</extra>
<subcategory>none</subcategory>
</error>
